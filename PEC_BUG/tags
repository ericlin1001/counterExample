!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCEPT	cir.h	/^double ACCEPT = 150;$/;"	v
ASCII	include/rapidjson/encodings.h	/^struct ASCII {$/;"	s
ASSERT	include/utils.h	15;"	d
Accept	include/rapidjson/document.h	/^    bool Accept(Handler& handler) const {$/;"	f	class:GenericValue
AddChunk	include/rapidjson/allocators.h	/^    void AddChunk(size_t capacity) {$/;"	f	class:MemoryPoolAllocator
AddConst	include/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	s	namespace:internal
AddMember	include/rapidjson/document.h	/^    AddMember(GenericValue& name, T value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    AddMember(StringRefType name, T value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, std::basic_string<Ch>& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
AllocatorType	include/rapidjson/document.h	/^    typedef Allocator AllocatorType;                        \/\/!< Allocator type from template parameter.$/;"	t	class:GenericDocument
AllocatorType	include/rapidjson/document.h	/^    typedef Allocator AllocatorType;                \/\/!< Allocator type from template parameter.$/;"	t	class:GenericValue
AndExpr	include/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct AndExpr : AndExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
AndExprCond	include/rapidjson/internal/meta.h	/^template <> struct AndExprCond<true, true> : TrueType {};$/;"	s	namespace:internal
AndExprCond	include/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct AndExprCond : FalseType {};$/;"	s	namespace:internal
Append	include/rapidjson/pointer.h	/^    Append(T* name, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(SizeType index, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const Ch* name, SizeType length, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const Token& token, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const ValueType& token, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const std::basic_string<Ch>& name, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
AppendDecimal64	include/rapidjson/internal/biginteger.h	/^    void AppendDecimal64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
Apply	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Apply	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Array	include/rapidjson/document.h	/^    struct Array {$/;"	s	class:GenericValue
AutoUTF	include/rapidjson/encodings.h	/^struct AutoUTF {$/;"	s
AutoUTFInputStream	include/rapidjson/encodedstream.h	/^    AutoUTFInputStream(InputByteStream& is, UTFType type = kUTF8) : is_(&is), type_(type), hasBOM_(false) {$/;"	f	class:AutoUTFInputStream
AutoUTFInputStream	include/rapidjson/encodedstream.h	/^class AutoUTFInputStream {$/;"	c
AutoUTFOutputStream	include/rapidjson/encodedstream.h	/^    AutoUTFOutputStream(OutputByteStream& os, UTFType type, bool putBOM) : os_(&os), type_(type) {$/;"	f	class:AutoUTFOutputStream
AutoUTFOutputStream	include/rapidjson/encodedstream.h	/^class AutoUTFOutputStream {$/;"	c
BASIC_DE	include/BasicDE.h	3;"	d
Base	include/rapidjson/prettywriter.h	/^    typedef Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator> Base;$/;"	t	class:PrettyWriter
Base	include/rapidjson/reader.h	/^        typedef NumberStream<InputStream, false> Base;$/;"	t	class:GenericReader::NumberStream
BaseReaderHandler	include/rapidjson/reader.h	/^struct BaseReaderHandler {$/;"	s
BaseType	include/rapidjson/document.h	/^    typedef std::iterator<std::random_access_iterator_tag,ValueType> BaseType;$/;"	t	class:GenericMemberIterator
BasicDE	include/BasicDE.h	/^class BasicDE:public EA{$/;"	c
BasicDE1	include/BasicDE.h	/^class BasicDE1:public EA{$/;"	c
Begin	include/rapidjson/document.h	/^    ConstValueIterator Begin() const { return const_cast<GenericValue&>(*this).Begin(); }$/;"	f	class:GenericValue
Begin	include/rapidjson/document.h	/^    ValueIterator Begin() { RAPIDJSON_ASSERT(IsArray()); return data_.a.elements; }$/;"	f	class:GenericValue
BigInteger	include/rapidjson/internal/biginteger.h	/^    BigInteger(const BigInteger& rhs) : count_(rhs.count_) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^    BigInteger(const char* decimals, size_t length) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^    explicit BigInteger(uint64_t u) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^class BigInteger {$/;"	c	namespace:internal
Bool	include/rapidjson/document.h	/^    bool Bool(bool b) { new (stack_.template Push<ValueType>()) ValueType(b); return true; }$/;"	f	class:GenericDocument
Bool	include/rapidjson/prettywriter.h	/^    bool Bool(bool b)           { PrettyPrefix(b ? kTrueType : kFalseType); return Base::WriteBool(b); }$/;"	f	class:PrettyWriter
Bool	include/rapidjson/reader.h	/^    bool Bool(bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Bool	include/rapidjson/writer.h	/^    bool Bool(bool b)           { Prefix(b ? kTrueType : kFalseType); return WriteBool(b); }$/;"	f	class:Writer
BoolExpr	include/rapidjson/internal/meta.h	/^template <typename C> struct BoolExpr : SelectIf<C,TrueType,FalseType>::Type {};$/;"	s	namespace:internal
BoolType	include/rapidjson/internal/meta.h	/^template <bool Cond> struct BoolType {$/;"	s	namespace:internal
Bottom	include/rapidjson/internal/stack.h	/^    T* Bottom() { return (T*)stack_; }$/;"	f	class:internal::Stack
C	cir.h	/^double L=0.00020000, C=0.001000000;$/;"	v
C2	cir.h	/^double RC3,C2,\/*RC2,*\/C3,R2;$/;"	v
C3	cir.h	/^double RC3,C2,\/*RC2,*\/C3,R2;$/;"	v
C4	cir.h	/^double C4,R4,R1;$/;"	v
CEC2015_TEST_FUNCTION	include/cec14_test_func.h	11;"	d
CIR_H	cir.h	3;"	d
COPY	include/rapidjson/encodings.h	125;"	d
COPY	include/rapidjson/encodings.h	147;"	d
COPY	include/rapidjson/encodings.h	154;"	d
COPY	include/rapidjson/encodings.h	173;"	d
CR	include/BasicDE.h	/^		double F,CR;$/;"	m	class:BasicDE
CR	include/BasicDE.h	/^		double F,CR;$/;"	m	class:BasicDE1
CS	cir.h	/^int CS=sizeof(STD_C)\/sizeof(double);\/\/CS=24;$/;"	v
Capacity	include/rapidjson/allocators.h	/^    size_t Capacity() const {$/;"	f	class:MemoryPoolAllocator
Capacity	include/rapidjson/document.h	/^    SizeType Capacity() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.capacity; }$/;"	f	class:GenericValue
Ch	include/rapidjson/document.h	/^    typedef CharType Ch; \/\/!< character type of the string$/;"	t	struct:GenericStringRef
Ch	include/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;                       \/\/!< Character type derived from Encoding.$/;"	t	class:GenericDocument
Ch	include/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;               \/\/!< Character type derived from Encoding.$/;"	t	class:GenericValue
Ch	include/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFInputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFOutputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedInputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedOutputStream
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:ASCII
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:AutoUTF
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF16
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF32
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF8
Ch	include/rapidjson/filereadstream.h	/^    typedef char Ch;    \/\/!< Character type (byte).$/;"	t	class:FileReadStream
Ch	include/rapidjson/filewritestream.h	/^    typedef char Ch;    \/\/!< Character type. Only support char.$/;"	t	class:FileWriteStream
Ch	include/rapidjson/memorybuffer.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:GenericMemoryBuffer
Ch	include/rapidjson/memorystream.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:MemoryStream
Ch	include/rapidjson/pointer.h	/^    typedef typename EncodingType::Ch Ch;                   \/\/!< Character type from Value$/;"	t	class:GenericPointer
Ch	include/rapidjson/prettywriter.h	/^    typedef typename Base::Ch Ch;$/;"	t	class:PrettyWriter
Ch	include/rapidjson/rapidjson.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericInsituStringStream
Ch	include/rapidjson/rapidjson.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericStringStream
Ch	include/rapidjson/reader.h	/^        typedef CharType Ch;$/;"	t	class:GenericReader::StackStream
Ch	include/rapidjson/reader.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:BaseReaderHandler
Ch	include/rapidjson/reader.h	/^    typedef typename SourceEncoding::Ch Ch; \/\/!< SourceEncoding character type$/;"	t	class:GenericReader
Ch	include/rapidjson/stringbuffer.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:GenericStringBuffer
Ch	include/rapidjson/writer.h	/^    typedef typename SourceEncoding::Ch Ch;$/;"	t	class:Writer
CharType	include/rapidjson/document.h	/^    GenericStringRef(CharType (&str)[N]) \/* = delete *\/;$/;"	m	struct:GenericStringRef
CheckWithinHalfULP	include/rapidjson/internal/strtod.h	/^inline int CheckWithinHalfULP(double b, const BigInteger& d, int dExp) {$/;"	f	namespace:internal
ChunkHeader	include/rapidjson/allocators.h	/^    struct ChunkHeader {$/;"	s	class:MemoryPoolAllocator
Clear	include/rapidjson/allocators.h	/^    void Clear() {$/;"	f	class:MemoryPoolAllocator
Clear	include/rapidjson/document.h	/^    void Clear() {$/;"	f	class:GenericValue
Clear	include/rapidjson/error/error.h	/^    void Clear() { Set(kParseErrorNone); }$/;"	f	struct:ParseResult
Clear	include/rapidjson/internal/stack.h	/^    void Clear() { stackTop_ = stack_; }$/;"	f	class:internal::Stack
Clear	include/rapidjson/memorybuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	struct:GenericMemoryBuffer
Clear	include/rapidjson/stringbuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	class:GenericStringBuffer
ClearStack	include/rapidjson/document.h	/^    void ClearStack() {$/;"	f	class:GenericDocument
ClearStack	include/rapidjson/reader.h	/^    void ClearStack() { stack_.Clear(); }$/;"	f	class:GenericReader
ClearStackOnExit	include/rapidjson/document.h	/^        explicit ClearStackOnExit(GenericDocument& d) : d_(d) {}$/;"	f	struct:GenericDocument::ClearStackOnExit
ClearStackOnExit	include/rapidjson/document.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericDocument
ClearStackOnExit	include/rapidjson/reader.h	/^        explicit ClearStackOnExit(GenericReader& r) : r_(r) {}$/;"	f	struct:GenericReader::ClearStackOnExit
ClearStackOnExit	include/rapidjson/reader.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericReader
Code	include/rapidjson/error/error.h	/^    ParseErrorCode Code() const { return code_; }$/;"	f	struct:ParseResult
ColonToken	include/rapidjson/reader.h	/^        ColonToken,$/;"	e	enum:GenericReader::Token
CommaToken	include/rapidjson/reader.h	/^        CommaToken,$/;"	e	enum:GenericReader::Token
Compare	include/rapidjson/internal/biginteger.h	/^    int Compare(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
ConstIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<true,Encoding,Allocator>  ConstIterator;$/;"	t	class:GenericMemberIterator
ConstMemberIterator	include/rapidjson/document.h	/^    typedef typename GenericMemberIterator<true,Encoding,Allocator>::Iterator ConstMemberIterator;  \/\/!< Constant member iterator for iterating in object.$/;"	t	class:GenericValue
ConstValueIterator	include/rapidjson/document.h	/^    typedef const GenericValue* ConstValueIterator; \/\/!< Constant value iterator for iterating in array.$/;"	t	class:GenericValue
CopyFrom	include/rapidjson/document.h	/^    GenericValue& CopyFrom(const GenericValue<Encoding, SourceAllocator>& rhs, Allocator& allocator) {$/;"	f	class:GenericValue
CopyFromRaw	include/rapidjson/pointer.h	/^    Ch* CopyFromRaw(const GenericPointer& rhs, size_t extraToken = 0, size_t extraNameBufferSize = 0) {$/;"	f	class:GenericPointer
CountDecimalDigit32	include/rapidjson/internal/dtoa.h	/^inline unsigned CountDecimalDigit32(uint32_t n) {$/;"	f	namespace:internal
Create	include/rapidjson/pointer.h	/^    ValueType& Create(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, bool* alreadyExist = 0) const {$/;"	f	class:GenericPointer
Create	include/rapidjson/pointer.h	/^    ValueType& Create(ValueType& root, typename ValueType::AllocatorType& allocator, bool* alreadyExist = 0) const {$/;"	f	class:GenericPointer
CreateValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& CreateValueByPointer(DocumentType& document, const CharType(&source)[N]) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& CreateValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& CreateValueByPointer(T& root, const CharType(&source)[N], typename T::AllocatorType& a) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& CreateValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::AllocatorType& a) {$/;"	f
CrtAllocator	include/rapidjson/allocators.h	/^class CrtAllocator {$/;"	c
Data	include/rapidjson/document.h	/^    union Data {$/;"	u	class:GenericValue
Decode	include/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:AutoUTF
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:ASCII
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF16
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF32
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF8
DefCEC14Func	include/functions.h	234;"	d
DefFunction	include/functions.h	55;"	d
Default	include/rapidjson/reader.h	/^    bool Default() { return true; }$/;"	f	struct:BaseReaderHandler
Denforce	cir.h	/^int stage, Vcon, Denforce, condition,\/*=9,*\/ k;$/;"	v
Destroy	include/rapidjson/document.h	/^    void Destroy() {$/;"	f	class:GenericDocument
Destroy	include/rapidjson/internal/stack.h	/^    void Destroy() {$/;"	f	class:internal::Stack
DetectType	include/rapidjson/encodedstream.h	/^    void DetectType() {$/;"	f	class:AutoUTFInputStream
Difference	include/rapidjson/internal/biginteger.h	/^    bool Difference(const BigInteger& rhs, BigInteger* out) const {$/;"	f	class:internal::BigInteger
DifferenceType	include/rapidjson/document.h	/^    typedef typename BaseType::difference_type DifferenceType;$/;"	t	class:GenericMemberIterator
DigitGen	include/rapidjson/internal/dtoa.h	/^inline void DigitGen(const DiyFp& W, const DiyFp& Mp, uint64_t delta, char* buffer, int* len, int* K) {$/;"	f	namespace:internal
DisableIf	include/rapidjson/internal/meta.h	/^struct DisableIf : DisableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
DisableIfCond	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	s	namespace:internal
DisableIfCond	include/rapidjson/internal/meta.h	/^template <typename T> struct DisableIfCond<true, T> { \/* empty *\/ };$/;"	s	namespace:internal
DiyFp	include/rapidjson/internal/diyfp.h	/^    DiyFp() {}$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^    DiyFp(uint64_t fp, int exp) : f(fp), e(exp) {}$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^    explicit DiyFp(double d) {$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^struct DiyFp {$/;"	s	namespace:internal
Document	include/rapidjson/document.h	/^typedef GenericDocument<UTF8<> > Document;$/;"	t
Double	include/rapidjson/document.h	/^    bool Double(double d) { new (stack_.template Push<ValueType>()) ValueType(d); return true; }$/;"	f	class:GenericDocument
Double	include/rapidjson/internal/ieee754.h	/^    Double() {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^    Double(double d) : d_(d) {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^    Double(uint64_t u) : u_(u) {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^class Double {$/;"	c	namespace:internal
Double	include/rapidjson/prettywriter.h	/^    bool Double(double d)       { PrettyPrefix(kNumberType); return Base::WriteDouble(d); }$/;"	f	class:PrettyWriter
Double	include/rapidjson/reader.h	/^    bool Double(double) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Double	include/rapidjson/writer.h	/^    bool Double(double d)       { Prefix(kNumberType); return WriteDouble(d); }$/;"	f	class:Writer
Dt	cir.h	101;"	d
E	include/cec14_test_func.h	18;"	d
EA	include/functions.h	/^		EA(){};$/;"	f	class:EA
EA	include/functions.h	/^		EA(const char *s){$/;"	f	class:EA
EA	include/functions.h	/^class EA{$/;"	c
EPS	include/cec14_test_func.h	17;"	d
EffectiveSignificandSize	include/rapidjson/internal/ieee754.h	/^    static unsigned EffectiveSignificandSize(int order) {$/;"	f	class:internal::Double
Empty	include/rapidjson/document.h	/^    bool Empty() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size == 0; }$/;"	f	class:GenericValue
Empty	include/rapidjson/internal/stack.h	/^    bool Empty() const { return stackTop_ == stack_; }$/;"	f	class:internal::Stack
EnableIf	include/rapidjson/internal/meta.h	/^struct EnableIf : EnableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
EnableIfCond	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	s	namespace:internal
EnableIfCond	include/rapidjson/internal/meta.h	/^template <typename T> struct EnableIfCond<false, T> { \/* empty *\/ };$/;"	s	namespace:internal
Encode	include/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:AutoUTF
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:ASCII
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF16
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF32
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF8
EncodedInputStream	include/rapidjson/encodedstream.h	/^    EncodedInputStream(InputByteStream& is) : is_(is) { $/;"	f	class:EncodedInputStream
EncodedInputStream	include/rapidjson/encodedstream.h	/^class EncodedInputStream {$/;"	c
EncodedOutputStream	include/rapidjson/encodedstream.h	/^    EncodedOutputStream(OutputByteStream& os, bool putBOM = true) : os_(os) { $/;"	f	class:EncodedOutputStream
EncodedOutputStream	include/rapidjson/encodedstream.h	/^class EncodedOutputStream {$/;"	c
EncodingType	include/rapidjson/document.h	/^    typedef Encoding EncodingType;                  \/\/!< Encoding type from template parameter.$/;"	t	class:GenericValue
EncodingType	include/rapidjson/pointer.h	/^    typedef typename ValueType::EncodingType EncodingType;  \/\/!< Encoding type from Value$/;"	t	class:GenericPointer
End	include/rapidjson/document.h	/^    ConstValueIterator End() const { return const_cast<GenericValue&>(*this).End(); }$/;"	f	class:GenericValue
End	include/rapidjson/document.h	/^    ValueIterator End() { RAPIDJSON_ASSERT(IsArray()); return data_.a.elements + data_.a.size; }$/;"	f	class:GenericValue
EndArray	include/rapidjson/document.h	/^    bool EndArray(SizeType elementCount) {$/;"	f	class:GenericDocument
EndArray	include/rapidjson/prettywriter.h	/^    bool EndArray(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndArray	include/rapidjson/reader.h	/^    bool EndArray(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndArray	include/rapidjson/writer.h	/^    bool EndArray(SizeType elementCount = 0) {$/;"	f	class:Writer
EndDef	include/functions.h	61;"	d
EndObject	include/rapidjson/document.h	/^    bool EndObject(SizeType memberCount) {$/;"	f	class:GenericDocument
EndObject	include/rapidjson/prettywriter.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndObject	include/rapidjson/reader.h	/^    bool EndObject(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndObject	include/rapidjson/writer.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:Writer
EnforceSWc	cir.h	/^void EnforceSWc()$/;"	f
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator first, ConstValueIterator last) {$/;"	f	class:GenericValue
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator pos) {$/;"	f	class:GenericValue
Erase	include/rapidjson/pointer.h	/^    bool Erase(ValueType& root) const {$/;"	f	class:GenericPointer
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator first, ConstMemberIterator last) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator pos) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const Ch* name) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const std::basic_string<Ch>& name) { return EraseMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
EraseValueByPointer	include/rapidjson/pointer.h	/^bool EraseValueByPointer(T& root, const CharType(&source)[N]) {$/;"	f
EraseValueByPointer	include/rapidjson/pointer.h	/^bool EraseValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer) {$/;"	f
Eref	cir.h	/^double Eref()$/;"	f
Eref1	cir.h	97;"	d
Expand	include/rapidjson/internal/stack.h	/^    void Expand(size_t count) {$/;"	f	class:internal::Stack
Exponent	include/rapidjson/internal/ieee754.h	/^    int Exponent() const { return static_cast<int>(((u_ & kExponentMask) >> kSignificandSize) - kExponentBias); }$/;"	f	class:internal::Double
F	include/BasicDE.h	/^		double F,CR;$/;"	m	class:BasicDE
F	include/BasicDE.h	/^		double F,CR;$/;"	m	class:BasicDE1
FUNCTION_H	include/functions.h	3;"	d
FalseToken	include/rapidjson/reader.h	/^        FalseToken,$/;"	e	enum:GenericReader::Token
FalseType	include/rapidjson/internal/meta.h	/^typedef BoolType<false> FalseType;$/;"	t	namespace:internal
FastPath	include/rapidjson/internal/strtod.h	/^inline double FastPath(double significand, int exp) {$/;"	f	namespace:internal
FileReadStream	include/rapidjson/filereadstream.h	/^    FileReadStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferSize_(bufferSize), bufferLast_(0), current_(buffer_), readCount_(0), count_(0), eof_(false) { $/;"	f	class:FileReadStream
FileReadStream	include/rapidjson/filereadstream.h	/^class FileReadStream {$/;"	c
FileWriteStream	include/rapidjson/filewritestream.h	/^    FileWriteStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferEnd_(buffer + bufferSize), current_(buffer_) { $/;"	f	class:FileWriteStream
FileWriteStream	include/rapidjson/filewritestream.h	/^class FileWriteStream {$/;"	c
FindMember	include/rapidjson/document.h	/^    ConstMemberIterator FindMember(const Ch* name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    ConstMemberIterator FindMember(const std::basic_string<Ch>& name) const { return FindMember(StringRef(name)); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const Ch* name) {$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const std::basic_string<Ch>& name) { return FindMember(StringRef(name)); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> ConstMemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:AutoUTFInputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:EncodedInputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { os_->Flush(); } $/;"	f	class:AutoUTFOutputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { os_.Flush(); }$/;"	f	class:EncodedOutputStream
Flush	include/rapidjson/filereadstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:FileReadStream
Flush	include/rapidjson/filewritestream.h	/^    void Flush() {$/;"	f	class:FileWriteStream
Flush	include/rapidjson/memorybuffer.h	/^    void Flush() {}$/;"	f	struct:GenericMemoryBuffer
Flush	include/rapidjson/memorystream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
Flush	include/rapidjson/rapidjson.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Flush	include/rapidjson/rapidjson.h	/^    void Flush() {}$/;"	f	struct:GenericInsituStringStream
Flush	include/rapidjson/stringbuffer.h	/^    void Flush() {}$/;"	f	class:GenericStringBuffer
Free	include/rapidjson/allocators.h	/^    static void Free(void *ptr) { (void)ptr; } \/\/ Do nothing$/;"	f	class:MemoryPoolAllocator
Free	include/rapidjson/allocators.h	/^    static void Free(void *ptr) { std::free(ptr); }$/;"	f	class:CrtAllocator
Function	include/functions.h	/^		Function(const char *s,double xlow,double xup,double fbest,int numDim){$/;"	f	class:Function
Function	include/functions.h	/^class Function{$/;"	c
FunctionFactory	include/functions.h	/^		FunctionFactory(){$/;"	f	class:FunctionFactory
FunctionFactory	include/functions.h	/^class FunctionFactory{$/;"	c
FunctionFactoryMy	include/functions.h	/^		FunctionFactoryMy():FunctionFactory(){$/;"	f	class:FunctionFactoryMy
FunctionFactoryMy	include/functions.h	/^class FunctionFactoryMy:public FunctionFactory{$/;"	c
FunctionReverse	include/functions.h	/^		FunctionReverse(Function *f):Function(f->getName(),f->getRange(0),f->getRange(1),-f->getFBest(),f->getNumDim()){$/;"	f	class:FunctionReverse
FunctionReverse	include/functions.h	/^class FunctionReverse:public Function{$/;"	c
GenericDocument	include/rapidjson/document.h	/^    GenericDocument(Allocator* allocator = 0, size_t stackCapacity = kDefaultStackCapacity, StackAllocator* stackAllocator = 0) : $/;"	f	class:GenericDocument
GenericDocument	include/rapidjson/document.h	/^    explicit GenericDocument(Type type, Allocator* allocator = 0, size_t stackCapacity = kDefaultStackCapacity, StackAllocator* stackAllocator = 0) :$/;"	f	class:GenericDocument
GenericDocument	include/rapidjson/document.h	/^class GenericDocument : public GenericValue<Encoding, Allocator> {$/;"	c
GenericInsituStringStream	include/rapidjson/rapidjson.h	/^    GenericInsituStringStream(Ch *src) : src_(src), dst_(0), head_(src) {}$/;"	f	struct:GenericInsituStringStream
GenericInsituStringStream	include/rapidjson/rapidjson.h	/^struct GenericInsituStringStream {$/;"	s
GenericMember	include/rapidjson/document.h	/^struct GenericMember { $/;"	s
GenericMemberIterator	include/rapidjson/document.h	/^    GenericMemberIterator() : ptr_() {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^    GenericMemberIterator(const NonConstIterator & it) : ptr_(it.ptr_) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^    explicit GenericMemberIterator(Pointer p) : ptr_(p) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^class GenericMemberIterator$/;"	c
GenericMemberIterator	include/rapidjson/document.h	/^struct GenericMemberIterator<false,Encoding,Allocator> {$/;"	s
GenericMemberIterator	include/rapidjson/document.h	/^struct GenericMemberIterator<true,Encoding,Allocator> {$/;"	s
GenericMemoryBuffer	include/rapidjson/memorybuffer.h	/^    GenericMemoryBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	struct:GenericMemoryBuffer
GenericMemoryBuffer	include/rapidjson/memorybuffer.h	/^struct GenericMemoryBuffer {$/;"	s
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer() : allocator_(), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {}$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const Ch* source, size_t length, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const GenericPointer& rhs) : allocator_(), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const Token* tokens, size_t tokenCount) : allocator_(), ownAllocator_(), nameBuffer_(), tokens_(const_cast<Token*>(tokens)), tokenCount_(tokenCount), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {}$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    explicit GenericPointer(const Ch* source, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    explicit GenericPointer(const std::basic_string<Ch>& source, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^class GenericPointer {$/;"	c
GenericReader	include/rapidjson/reader.h	/^    GenericReader(StackAllocator* stackAllocator = 0, size_t stackCapacity = kDefaultStackCapacity) : stack_(stackAllocator, stackCapacity), parseResult_() {}$/;"	f	class:GenericReader
GenericReader	include/rapidjson/reader.h	/^class GenericReader {$/;"	c
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer(GenericStringBuffer&& rhs) : stack_(std::move(rhs.stack_)) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^class GenericStringBuffer {$/;"	c
GenericStringRef	include/rapidjson/document.h	/^    GenericStringRef(const CharType* str, SizeType len)$/;"	f	struct:GenericStringRef
GenericStringRef	include/rapidjson/document.h	/^    explicit GenericStringRef(const CharType* str)$/;"	f	struct:GenericStringRef
GenericStringRef	include/rapidjson/document.h	/^struct GenericStringRef {$/;"	s
GenericStringStream	include/rapidjson/rapidjson.h	/^    GenericStringStream(const Ch *src) : src_(src), head_(src) {}$/;"	f	struct:GenericStringStream
GenericStringStream	include/rapidjson/rapidjson.h	/^struct GenericStringStream {$/;"	s
GenericValue	include/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s, length), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^    GenericValue(const Ch*s, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^    GenericValue(const std::basic_string<Ch>& s, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^GenericValue<Encoding,Allocator>::GenericValue(const GenericValue<Encoding,SourceAllocator>& rhs, Allocator& allocator)$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^class GenericValue {$/;"	c
Get	include/rapidjson/pointer.h	/^    ValueType* Get(ValueType& root) const {$/;"	f	class:GenericPointer
Get	include/rapidjson/pointer.h	/^    const ValueType* Get(const ValueType& root) const { return Get(const_cast<ValueType&>(root)); }$/;"	f	class:GenericPointer
GetAllocator	include/rapidjson/document.h	/^    Allocator& GetAllocator() {$/;"	f	class:GenericDocument
GetAllocator	include/rapidjson/internal/stack.h	/^    Allocator& GetAllocator() {$/;"	f	class:internal::Stack
GetBool	include/rapidjson/document.h	/^    bool GetBool() const { RAPIDJSON_ASSERT(IsBool()); return flags_ == kTrueFlag; }$/;"	f	class:GenericValue
GetBuffer	include/rapidjson/memorybuffer.h	/^    const Ch* GetBuffer() const {$/;"	f	struct:GenericMemoryBuffer
GetCachedPower	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower(int e, int* K) {$/;"	f	namespace:internal
GetCachedPower10	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower10(int exp, int *outExp) {$/;"	f	namespace:internal
GetCachedPowerByIndex	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPowerByIndex(size_t index) {$/;"	f	namespace:internal
GetCapacity	include/rapidjson/internal/stack.h	/^    size_t GetCapacity() const { return static_cast<size_t>(stackEnd_ - stack_); }$/;"	f	class:internal::Stack
GetCount	include/rapidjson/internal/biginteger.h	/^    size_t GetCount() const { return count_; }$/;"	f	class:internal::BigInteger
GetDigit	include/rapidjson/internal/biginteger.h	/^    Type GetDigit(size_t index) const { RAPIDJSON_ASSERT(index < count_); return digits_[index]; }$/;"	f	class:internal::BigInteger
GetDigitsLut	include/rapidjson/internal/itoa.h	/^inline const char* GetDigitsLut() {$/;"	f	namespace:internal
GetDouble	include/rapidjson/document.h	/^    double GetDouble() const {$/;"	f	class:GenericValue
GetErrorOffset	include/rapidjson/document.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericDocument
GetErrorOffset	include/rapidjson/reader.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericReader
GetInt	include/rapidjson/document.h	/^    int GetInt() const          { RAPIDJSON_ASSERT(flags_ & kIntFlag);   return data_.n.i.i;   }$/;"	f	class:GenericValue
GetInt64	include/rapidjson/document.h	/^    int64_t GetInt64() const    { RAPIDJSON_ASSERT(flags_ & kInt64Flag); return data_.n.i64; }$/;"	f	class:GenericValue
GetLength	include/rapidjson/document.h	/^        inline SizeType GetLength() const       { return  (SizeType)(MaxSize -  str[LenPos]); }$/;"	f	struct:GenericValue::ShortString
GetParseError	include/rapidjson/document.h	/^    ParseErrorCode GetParseError() const { return parseResult_.Code(); }$/;"	f	class:GenericDocument
GetParseErrorCode	include/rapidjson/pointer.h	/^    PointerParseErrorCode GetParseErrorCode() const { return parseErrorCode_; }$/;"	f	class:GenericPointer
GetParseErrorCode	include/rapidjson/reader.h	/^    ParseErrorCode GetParseErrorCode() const { return parseResult_.Code(); }$/;"	f	class:GenericReader
GetParseErrorFunc	include/rapidjson/error/error.h	/^typedef const RAPIDJSON_ERROR_CHARTYPE* (*GetParseErrorFunc)(ParseErrorCode);$/;"	t
GetParseErrorOffset	include/rapidjson/pointer.h	/^    size_t GetParseErrorOffset() const { return parseErrorOffset_; }$/;"	f	class:GenericPointer
GetParseError_En	include/rapidjson/error/en.h	/^inline const RAPIDJSON_ERROR_CHARTYPE* GetParseError_En(ParseErrorCode parseErrorCode) {$/;"	f
GetRange	include/rapidjson/encodings.h	/^    static unsigned char GetRange(unsigned char c) {$/;"	f	struct:UTF8
GetSize	include/rapidjson/internal/stack.h	/^    size_t GetSize() const { return static_cast<size_t>(stackTop_ - stack_); }$/;"	f	class:internal::Stack
GetSize	include/rapidjson/memorybuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	struct:GenericMemoryBuffer
GetSize	include/rapidjson/stringbuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	class:GenericStringBuffer
GetStackCapacity	include/rapidjson/document.h	/^    size_t GetStackCapacity() const { return stack_.GetCapacity(); }$/;"	f	class:GenericDocument
GetString	include/rapidjson/document.h	/^    const Ch* GetString() const { RAPIDJSON_ASSERT(IsString()); return ((flags_ & kInlineStrFlag) ? data_.ss.str : data_.s.str); }$/;"	f	class:GenericValue
GetString	include/rapidjson/stringbuffer.h	/^    const Ch* GetString() const {$/;"	f	class:GenericStringBuffer
GetStringLength	include/rapidjson/document.h	/^    SizeType GetStringLength() const { RAPIDJSON_ASSERT(IsString()); return ((flags_ & kInlineStrFlag) ? (data_.ss.GetLength()) : data_.s.length); }$/;"	f	class:GenericValue
GetTokenCount	include/rapidjson/pointer.h	/^    size_t GetTokenCount() const { return tokenCount_; }$/;"	f	class:GenericPointer
GetTokens	include/rapidjson/pointer.h	/^    const Token* GetTokens() const { return tokens_; }$/;"	f	class:GenericPointer
GetType	include/rapidjson/document.h	/^    Type GetType()  const { return static_cast<Type>(flags_ & kTypeMask); }$/;"	f	class:GenericValue
GetType	include/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFInputStream
GetType	include/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFOutputStream
GetUint	include/rapidjson/document.h	/^    unsigned GetUint() const    { RAPIDJSON_ASSERT(flags_ & kUintFlag);  return data_.n.u.u;   }$/;"	f	class:GenericValue
GetUint64	include/rapidjson/document.h	/^    uint64_t GetUint64() const  { RAPIDJSON_ASSERT(flags_ & kUint64Flag); return data_.n.u64; }$/;"	f	class:GenericValue
GetValueByPointer	include/rapidjson/pointer.h	/^const typename T::ValueType* GetValueByPointer(const T& root, const CharType(&source)[N]) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^const typename T::ValueType* GetValueByPointer(const T& root, const GenericPointer<typename T::ValueType>& pointer) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType* GetValueByPointer(T& root, const CharType (&source)[N]) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType* GetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], T2 defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, T2 defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(T& root, const CharType(&source)[N], T2 defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, T2 defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const std::basic_string<typename DocumentType::Ch>& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const typename DocumentType::Ch* defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const typename DocumentType::ValueType& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const std::basic_string<typename DocumentType::Ch>& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::Ch* defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::ValueType& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const std::basic_string<typename T::Ch>& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const typename T::Ch* defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const typename T::ValueType& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const std::basic_string<typename T::Ch>& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::Ch* defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::ValueType& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetWithDefault	include/rapidjson/pointer.h	/^    GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, T defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    GetWithDefault(ValueType& root, T defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const Ch* defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const ValueType& defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const std::basic_string<Ch>& defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const Ch* defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const ValueType& defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const std::basic_string<Ch>& defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Grisu2	include/rapidjson/internal/dtoa.h	/^inline void Grisu2(double value, char* buffer, int* length, int* K) {$/;"	f	namespace:internal
GrisuRound	include/rapidjson/internal/dtoa.h	/^inline void GrisuRound(char* buffer, int len, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t wp_w) {$/;"	f	namespace:internal
HandleError	include/rapidjson/reader.h	/^    void HandleError(IterativeParsingState src, InputStream& is) {$/;"	f	class:GenericReader
HasAllocator	include/rapidjson/internal/stack.h	/^    bool HasAllocator() const {$/;"	f	class:internal::Stack
HasBOM	include/rapidjson/encodedstream.h	/^    bool HasBOM() const { return hasBOM_; }$/;"	f	class:AutoUTFInputStream
HasMember	include/rapidjson/document.h	/^    bool HasMember(const Ch* name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	include/rapidjson/document.h	/^    bool HasMember(const GenericValue<Encoding, SourceAllocator>& name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	include/rapidjson/document.h	/^    bool HasMember(const std::basic_string<Ch>& name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasParseError	include/rapidjson/document.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericDocument
HasParseError	include/rapidjson/reader.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericReader
Host	include/rapidjson/internal/meta.h	/^    struct Host {$/;"	s	struct:internal::IsBaseOfImpl
I	include/rapidjson/document.h	/^        struct I {$/;"	s	union:GenericValue::Number
IDHelper	include/IDHelper.h	/^class IDHelper{$/;"	c
ID_HELPER_H	include/IDHelper.h	3;"	d
INF	include/cec14_test_func.h	16;"	d
INT16_C	include/rapidjson/msinttypes/stdint.h	277;"	d
INT16_C	include/rapidjson/msinttypes/stdint.h	55;"	d
INT16_C	include/rapidjson/msinttypes/stdint.h	66;"	d
INT16_MAX	include/rapidjson/msinttypes/stdint.h	181;"	d
INT16_MIN	include/rapidjson/msinttypes/stdint.h	180;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	278;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	56;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	67;"	d
INT32_MAX	include/rapidjson/msinttypes/stdint.h	183;"	d
INT32_MIN	include/rapidjson/msinttypes/stdint.h	182;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	279;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	57;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	68;"	d
INT64_MAX	include/rapidjson/msinttypes/stdint.h	185;"	d
INT64_MIN	include/rapidjson/msinttypes/stdint.h	184;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	276;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	54;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	65;"	d
INT8_MAX	include/rapidjson/msinttypes/stdint.h	179;"	d
INT8_MIN	include/rapidjson/msinttypes/stdint.h	178;"	d
INTMAX_C	include/rapidjson/msinttypes/stdint.h	290;"	d
INTMAX_C	include/rapidjson/msinttypes/stdint.h	79;"	d
INTMAX_MAX	include/rapidjson/msinttypes/stdint.h	232;"	d
INTMAX_MIN	include/rapidjson/msinttypes/stdint.h	231;"	d
INTPTR_MAX	include/rapidjson/msinttypes/stdint.h	222;"	d
INTPTR_MAX	include/rapidjson/msinttypes/stdint.h	226;"	d
INTPTR_MIN	include/rapidjson/msinttypes/stdint.h	221;"	d
INTPTR_MIN	include/rapidjson/msinttypes/stdint.h	225;"	d
INT_FAST16_MAX	include/rapidjson/msinttypes/stdint.h	209;"	d
INT_FAST16_MIN	include/rapidjson/msinttypes/stdint.h	208;"	d
INT_FAST32_MAX	include/rapidjson/msinttypes/stdint.h	211;"	d
INT_FAST32_MIN	include/rapidjson/msinttypes/stdint.h	210;"	d
INT_FAST64_MAX	include/rapidjson/msinttypes/stdint.h	213;"	d
INT_FAST64_MIN	include/rapidjson/msinttypes/stdint.h	212;"	d
INT_FAST8_MAX	include/rapidjson/msinttypes/stdint.h	207;"	d
INT_FAST8_MIN	include/rapidjson/msinttypes/stdint.h	206;"	d
INT_LEAST16_MAX	include/rapidjson/msinttypes/stdint.h	195;"	d
INT_LEAST16_MIN	include/rapidjson/msinttypes/stdint.h	194;"	d
INT_LEAST32_MAX	include/rapidjson/msinttypes/stdint.h	197;"	d
INT_LEAST32_MIN	include/rapidjson/msinttypes/stdint.h	196;"	d
INT_LEAST64_MAX	include/rapidjson/msinttypes/stdint.h	199;"	d
INT_LEAST64_MIN	include/rapidjson/msinttypes/stdint.h	198;"	d
INT_LEAST8_MAX	include/rapidjson/msinttypes/stdint.h	193;"	d
INT_LEAST8_MIN	include/rapidjson/msinttypes/stdint.h	192;"	d
Imax	cir.h	99;"	d
InsituStringStream	include/rapidjson/rapidjson.h	/^typedef GenericInsituStringStream<UTF8<> > InsituStringStream;$/;"	t
Instance	include/functions.h	/^		static FunctionFactory *Instance(int numDim){$/;"	f	class:FunctionFactory
Instance	include/functions.h	/^		static FunctionFactoryMy *Instance(int numDim){$/;"	f	class:FunctionFactoryMy
Int	include/rapidjson/document.h	/^    bool Int(int i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int	include/rapidjson/prettywriter.h	/^    bool Int(int i)             { PrettyPrefix(kNumberType); return Base::WriteInt(i); }$/;"	f	class:PrettyWriter
Int	include/rapidjson/reader.h	/^    bool Int(int) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int	include/rapidjson/writer.h	/^    bool Int(int i)             { Prefix(kNumberType); return WriteInt(i); }$/;"	f	class:Writer
Int64	include/rapidjson/document.h	/^    bool Int64(int64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int64	include/rapidjson/prettywriter.h	/^    bool Int64(int64_t i64)     { PrettyPrefix(kNumberType); return Base::WriteInt64(i64); }$/;"	f	class:PrettyWriter
Int64	include/rapidjson/reader.h	/^    bool Int64(int64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int64	include/rapidjson/writer.h	/^    bool Int64(int64_t i64)     { Prefix(kNumberType); return WriteInt64(i64); }$/;"	f	class:Writer
IntegerExponent	include/rapidjson/internal/ieee754.h	/^    int IntegerExponent() const { return (IsNormal() ? Exponent() : kDenormalExponent) - kSignificandSize; }$/;"	f	class:internal::Double
IntegerSignificand	include/rapidjson/internal/ieee754.h	/^    uint64_t IntegerSignificand() const { return IsNormal() ? Significand() | kHiddenBit : Significand(); }$/;"	f	class:internal::Double
IsArray	include/rapidjson/document.h	/^    bool IsArray()  const { return flags_ == kArrayFlag; }$/;"	f	class:GenericValue
IsBaseOf	include/rapidjson/internal/meta.h	/^template <typename B, typename D> struct IsBaseOf$/;"	s	namespace:internal
IsBaseOfImpl	include/rapidjson/internal/meta.h	/^template<typename B, typename D> struct IsBaseOfImpl {$/;"	s	namespace:internal
IsBool	include/rapidjson/document.h	/^    bool IsBool()   const { return (flags_ & kBoolFlag) != 0; }$/;"	f	class:GenericValue
IsComplete	include/rapidjson/writer.h	/^    bool IsComplete() const {$/;"	f	class:Writer
IsConst	include/rapidjson/internal/meta.h	/^template <typename T> struct IsConst : FalseType {};$/;"	s	namespace:internal
IsConst	include/rapidjson/internal/meta.h	/^template <typename T> struct IsConst<const T> : TrueType {};$/;"	s	namespace:internal
IsDouble	include/rapidjson/document.h	/^    bool IsDouble() const { return (flags_ & kDoubleFlag) != 0; }$/;"	f	class:GenericValue
IsError	include/rapidjson/error/error.h	/^    bool IsError() const { return code_ != kParseErrorNone; }$/;"	f	struct:ParseResult
IsFalse	include/rapidjson/document.h	/^    bool IsFalse()  const { return flags_ == kFalseFlag; }$/;"	f	class:GenericValue
IsGenericValue	include/rapidjson/document.h	/^template <typename T> struct IsGenericValue : IsGenericValueImpl<T>::Type {};$/;"	s	namespace:internal
IsGenericValueImpl	include/rapidjson/document.h	/^struct IsGenericValueImpl : FalseType {};$/;"	s	namespace:internal
IsGenericValueImpl	include/rapidjson/document.h	/^template <typename T> struct IsGenericValueImpl<T, typename Void<typename T::EncodingType>::Type, typename Void<typename T::AllocatorType>::Type>$/;"	s	namespace:internal
IsInf	include/rapidjson/internal/ieee754.h	/^    bool IsInf() const { return (u_ & kExponentMask) == kExponentMask && Significand() == 0; }$/;"	f	class:internal::Double
IsInt	include/rapidjson/document.h	/^    bool IsInt()    const { return (flags_ & kIntFlag) != 0; }$/;"	f	class:GenericValue
IsInt64	include/rapidjson/document.h	/^    bool IsInt64()  const { return (flags_ & kInt64Flag) != 0; }$/;"	f	class:GenericValue
IsMoreConst	include/rapidjson/internal/meta.h	/^struct IsMoreConst$/;"	s	namespace:internal
IsNan	include/rapidjson/internal/ieee754.h	/^    bool IsNan() const { return (u_ & kExponentMask) == kExponentMask && Significand() != 0; }$/;"	f	class:internal::Double
IsNormal	include/rapidjson/internal/ieee754.h	/^    bool IsNormal() const { return (u_ & kExponentMask) != 0 || Significand() == 0; }$/;"	f	class:internal::Double
IsNull	include/rapidjson/document.h	/^    bool IsNull()   const { return flags_ == kNullFlag; }$/;"	f	class:GenericValue
IsNumber	include/rapidjson/document.h	/^    bool IsNumber() const { return (flags_ & kNumberFlag) != 0; }$/;"	f	class:GenericValue
IsObject	include/rapidjson/document.h	/^    bool IsObject() const { return flags_ == kObjectFlag; }$/;"	f	class:GenericValue
IsPointer	include/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer : FalseType {};$/;"	s	namespace:internal
IsPointer	include/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer<T*> : TrueType {};$/;"	s	namespace:internal
IsSame	include/rapidjson/internal/meta.h	/^template <typename T, typename U> struct IsSame : FalseType {};$/;"	s	namespace:internal
IsSame	include/rapidjson/internal/meta.h	/^template <typename T> struct IsSame<T, T> : TrueType {};$/;"	s	namespace:internal
IsString	include/rapidjson/document.h	/^    bool IsString() const { return (flags_ & kStringFlag) != 0; }$/;"	f	class:GenericValue
IsTrue	include/rapidjson/document.h	/^    bool IsTrue()   const { return flags_ == kTrueFlag; }$/;"	f	class:GenericValue
IsUint	include/rapidjson/document.h	/^    bool IsUint()   const { return (flags_ & kUintFlag) != 0; }$/;"	f	class:GenericValue
IsUint64	include/rapidjson/document.h	/^    bool IsUint64() const { return (flags_ & kUint64Flag) != 0; }$/;"	f	class:GenericValue
IsValid	include/rapidjson/pointer.h	/^        bool IsValid() const { return valid_; }$/;"	f	class:GenericPointer::PercentDecodeStream
IsValid	include/rapidjson/pointer.h	/^    bool IsValid() const { return parseErrorCode_ == kPointerParseErrorNone; }$/;"	f	class:GenericPointer
IsZero	include/rapidjson/internal/biginteger.h	/^    bool IsZero() const { return count_ == 1 && digits_[0] == 0; }$/;"	f	class:internal::BigInteger
IsZero	include/rapidjson/internal/ieee754.h	/^    bool IsZero() const { return (u_ & (kExponentMask | kSignificandMask)) == 0; }$/;"	f	class:internal::Double
IterativeParse	include/rapidjson/reader.h	/^    ParseResult IterativeParse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
IterativeParsingArrayFinishState	include/rapidjson/reader.h	/^        IterativeParsingArrayFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingArrayInitialState	include/rapidjson/reader.h	/^        IterativeParsingArrayInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingElementDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementState	include/rapidjson/reader.h	/^        IterativeParsingElementState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingErrorState	include/rapidjson/reader.h	/^        IterativeParsingErrorState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingFinishState	include/rapidjson/reader.h	/^        IterativeParsingFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingKeyValueDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingKeyValueDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingMemberDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberKeyState	include/rapidjson/reader.h	/^        IterativeParsingMemberKeyState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberValueState	include/rapidjson/reader.h	/^        IterativeParsingMemberValueState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectFinishState	include/rapidjson/reader.h	/^        IterativeParsingObjectFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectInitialState	include/rapidjson/reader.h	/^        IterativeParsingObjectInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingStartState	include/rapidjson/reader.h	/^        IterativeParsingStartState = 0,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingState	include/rapidjson/reader.h	/^    enum IterativeParsingState {$/;"	g	class:GenericReader
IterativeParsingValueState	include/rapidjson/reader.h	/^        IterativeParsingValueState,$/;"	e	enum:GenericReader::IterativeParsingState
Iterator	include/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
Iterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator Iterator;$/;"	t	class:GenericMemberIterator
Iterator	include/rapidjson/document.h	/^    typedef const GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
K0	cir.h	/^double K0[nX], K1[nX];$/;"	v
K1	cir.h	/^double K0[nX], K1[nX];$/;"	v
Key	include/rapidjson/document.h	/^    bool Key(const Ch* str, SizeType length, bool copy) { return String(str, length, copy); }$/;"	f	class:GenericDocument
Key	include/rapidjson/prettywriter.h	/^    bool Key(const Ch* str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
Key	include/rapidjson/prettywriter.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:PrettyWriter
Key	include/rapidjson/reader.h	/^    bool Key(const Ch* str, SizeType len, bool copy) { return static_cast<Override&>(*this).String(str, len, copy); }$/;"	f	struct:BaseReaderHandler
Key	include/rapidjson/writer.h	/^    bool Key(const Ch* str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:Writer
Key	include/rapidjson/writer.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:Writer
L	cir.h	/^double L=0.00020000, C=0.001000000;$/;"	v
LCbranch	cir.h	/^void LCbranch(double *ptr)$/;"	f
LeftBracketToken	include/rapidjson/reader.h	/^        LeftBracketToken = 0,$/;"	e	enum:GenericReader::Token
LeftCurlyBracketToken	include/rapidjson/reader.h	/^        LeftCurlyBracketToken,$/;"	e	enum:GenericReader::Token
LenPos	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon14
Length	include/rapidjson/reader.h	/^        size_t Length() const { return length_; }$/;"	f	class:GenericReader::StackStream
Length	include/rapidjson/reader.h	/^        size_t Length() { return 0; }$/;"	f	class:GenericReader::NumberStream
Length	include/rapidjson/reader.h	/^        size_t Length() { return stackStream.Length(); }$/;"	f	class:GenericReader::NumberStream
Level	include/rapidjson/writer.h	/^        Level(bool inArray_) : valueCount(0), inArray(inArray_) {}$/;"	f	struct:Writer::Level
Level	include/rapidjson/writer.h	/^    struct Level {$/;"	s	class:Writer
M	include/cec14_test_func.h	/^double *OShift,*M,*y,*z,*x_bound;$/;"	v
MATH_EXP	include/utils.h	13;"	d
MATH_PI	include/utils.h	12;"	d
MAX_BUFFER	include/utils.h	11;"	d
MPIHelper	include/MPIHelper.h	/^		MPIHelper(int &argc,char ** &argv){$/;"	f	class:MPIHelper
MPIHelper	include/MPIHelper.h	/^	MPIHelper(){$/;"	f	class:MPIHelper
MPIHelper	include/MPIHelper.h	/^class MPIHelper{$/;"	c
MPI_HELPER_H	include/MPIHelper.h	5;"	d
Malloc	include/rapidjson/allocators.h	/^    void* Malloc(size_t size) { $/;"	f	class:CrtAllocator
Malloc	include/rapidjson/allocators.h	/^    void* Malloc(size_t size) {$/;"	f	class:MemoryPoolAllocator
MaxChars	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon14
MaxSize	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon14
MaybeAddConst	include/rapidjson/internal/meta.h	/^template <bool Constify, typename T> struct MaybeAddConst : SelectIfCond<Constify, const T, T> {};$/;"	s	namespace:internal
Member	include/rapidjson/document.h	/^    typedef GenericMember<Encoding, Allocator> Member;$/;"	t	class:GenericValue
MemberBegin	include/rapidjson/document.h	/^    ConstMemberIterator MemberBegin() const { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members); }$/;"	f	class:GenericValue
MemberBegin	include/rapidjson/document.h	/^    MemberIterator MemberBegin()            { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members); }$/;"	f	class:GenericValue
MemberCount	include/rapidjson/document.h	/^    SizeType MemberCount() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size; }$/;"	f	class:GenericValue
MemberEnd	include/rapidjson/document.h	/^    ConstMemberIterator MemberEnd() const   { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members + data_.o.size); }$/;"	f	class:GenericValue
MemberEnd	include/rapidjson/document.h	/^    MemberIterator MemberEnd()              { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members + data_.o.size); }$/;"	f	class:GenericValue
MemberIterator	include/rapidjson/document.h	/^    typedef typename GenericMemberIterator<false,Encoding,Allocator>::Iterator MemberIterator;  \/\/!< Member iterator for iterating in object.$/;"	t	class:GenericValue
MemoryBuffer	include/rapidjson/memorybuffer.h	/^typedef GenericMemoryBuffer<> MemoryBuffer;$/;"	t
MemoryPoolAllocator	include/rapidjson/allocators.h	/^    MemoryPoolAllocator(size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) : $/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	include/rapidjson/allocators.h	/^    MemoryPoolAllocator(void *buffer, size_t size, size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) :$/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	include/rapidjson/allocators.h	/^class MemoryPoolAllocator {$/;"	c
MemoryStream	include/rapidjson/memorystream.h	/^    MemoryStream(const Ch *src, size_t size) : src_(src), begin_(src), end_(src + size), size_(size) {}$/;"	f	struct:MemoryStream
MemoryStream	include/rapidjson/memorystream.h	/^struct MemoryStream {$/;"	s
Min3	include/rapidjson/internal/strtod.h	/^inline T Min3(T a, T b, T c) {$/;"	f	namespace:internal
MulAdd64	include/rapidjson/internal/biginteger.h	/^    static uint64_t MulAdd64(uint64_t a, uint64_t b, uint64_t k, uint64_t* outHigh) {$/;"	f	class:internal::BigInteger
MultiplyPow5	include/rapidjson/internal/biginteger.h	/^    BigInteger& MultiplyPow5(unsigned exp) {$/;"	f	class:internal::BigInteger
N	include/rapidjson/reader.h	1106;"	d
N	include/rapidjson/reader.h	1120;"	d
N16	include/rapidjson/reader.h	1107;"	d
N16	include/rapidjson/reader.h	1121;"	d
NeedPercentEncode	include/rapidjson/pointer.h	/^    bool NeedPercentEncode(Ch c) const {$/;"	f	class:GenericPointer
NextPositiveDouble	include/rapidjson/internal/ieee754.h	/^    double NextPositiveDouble() const {$/;"	f	class:internal::Double
No	include/rapidjson/internal/meta.h	/^    typedef char (&No) [2];$/;"	t	struct:internal::IsBaseOfImpl
NonConstIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<false,Encoding,Allocator> NonConstIterator;$/;"	t	class:GenericMemberIterator
NormD	include/utils.h	/^inline double NormD(double u,double t){$/;"	f
Normalize	include/rapidjson/internal/diyfp.h	/^    DiyFp Normalize() const {$/;"	f	struct:internal::DiyFp
NormalizeBoundary	include/rapidjson/internal/diyfp.h	/^    DiyFp NormalizeBoundary() const {$/;"	f	struct:internal::DiyFp
NormalizedBoundaries	include/rapidjson/internal/diyfp.h	/^    void NormalizedBoundaries(DiyFp* minus, DiyFp* plus) const {$/;"	f	struct:internal::DiyFp
NotExpr	include/rapidjson/internal/meta.h	/^template <typename C> struct NotExpr  : SelectIf<C,FalseType,TrueType>::Type {};$/;"	s	namespace:internal
Null	include/rapidjson/document.h	/^    bool Null() { new (stack_.template Push<ValueType>()) ValueType(); return true; }$/;"	f	class:GenericDocument
Null	include/rapidjson/prettywriter.h	/^    bool Null()                 { PrettyPrefix(kNullType);   return Base::WriteNull(); }$/;"	f	class:PrettyWriter
Null	include/rapidjson/reader.h	/^    bool Null() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Null	include/rapidjson/writer.h	/^    bool Null()                 { Prefix(kNullType);   return WriteNull(); }$/;"	f	class:Writer
NullToken	include/rapidjson/reader.h	/^        NullToken,$/;"	e	enum:GenericReader::Token
Number	include/rapidjson/document.h	/^    union Number {$/;"	u	class:GenericValue
NumberStream	include/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& is) : NumberStream<InputStream, false>(reader, is), stackStream(reader.stack_) {}$/;"	f	class:GenericReader::NumberStream
NumberStream	include/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& s) : is(s) { (void)reader;  }$/;"	f	class:GenericReader::NumberStream
NumberStream	include/rapidjson/reader.h	/^    class NumberStream<InputStream, false> {$/;"	c	class:GenericReader
NumberStream	include/rapidjson/reader.h	/^    class NumberStream<InputStream, true> : public NumberStream<InputStream, false> {$/;"	c	class:GenericReader
NumberToken	include/rapidjson/reader.h	/^        NumberToken,$/;"	e	enum:GenericReader::Token
OF2	cir.h	/^double	overshoot,undershoot,PF1,OF4,OF2,ov,uv,time_con;$/;"	v
OF4	cir.h	/^double	overshoot,undershoot,PF1,OF4,OF2,ov,uv,time_con;$/;"	v
OMPI_IMPORTS	include/MPIHelper.h	9;"	d
OShift	include/cec14_test_func.h	/^double *OShift,*M,*y,*z,*x_bound;$/;"	v
Object	include/rapidjson/document.h	/^    struct Object {$/;"	s	class:GenericValue
ObjectEmpty	include/rapidjson/document.h	/^    bool ObjectEmpty() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size == 0; }$/;"	f	class:GenericValue
Offset	include/rapidjson/error/error.h	/^    size_t Offset() const { return offset_; }$/;"	f	struct:ParseResult
OrExpr	include/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct OrExpr  : OrExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
OrExprCond	include/rapidjson/internal/meta.h	/^template <> struct OrExprCond<false, false> : FalseType {};$/;"	s	namespace:internal
OrExprCond	include/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct OrExprCond : TrueType {};$/;"	s	namespace:internal
Override	include/rapidjson/reader.h	/^    typedef typename internal::SelectIf<internal::IsSame<Derived, void>, BaseReaderHandler, Derived>::Type Override;$/;"	t	struct:BaseReaderHandler
PEC_FUNCTION_H	pecFunction.h	2;"	d
PF1	cir.h	/^double	overshoot,undershoot,PF1,OF4,OF2,ov,uv,time_con;$/;"	v
PI	include/cec14_test_func.h	19;"	d
PRIX16	include/rapidjson/msinttypes/inttypes.h	118;"	d
PRIX32	include/rapidjson/msinttypes/inttypes.h	131;"	d
PRIX64	include/rapidjson/msinttypes/inttypes.h	144;"	d
PRIX8	include/rapidjson/msinttypes/inttypes.h	105;"	d
PRIXFAST16	include/rapidjson/msinttypes/inttypes.h	126;"	d
PRIXFAST32	include/rapidjson/msinttypes/inttypes.h	139;"	d
PRIXFAST64	include/rapidjson/msinttypes/inttypes.h	152;"	d
PRIXFAST8	include/rapidjson/msinttypes/inttypes.h	113;"	d
PRIXLEAST16	include/rapidjson/msinttypes/inttypes.h	122;"	d
PRIXLEAST32	include/rapidjson/msinttypes/inttypes.h	135;"	d
PRIXLEAST64	include/rapidjson/msinttypes/inttypes.h	148;"	d
PRIXLEAST8	include/rapidjson/msinttypes/inttypes.h	109;"	d
PRIXMAX	include/rapidjson/msinttypes/inttypes.h	157;"	d
PRIXPTR	include/rapidjson/msinttypes/inttypes.h	162;"	d
PRId16	include/rapidjson/msinttypes/inttypes.h	74;"	d
PRId32	include/rapidjson/msinttypes/inttypes.h	81;"	d
PRId64	include/rapidjson/msinttypes/inttypes.h	88;"	d
PRId8	include/rapidjson/msinttypes/inttypes.h	67;"	d
PRIdFAST16	include/rapidjson/msinttypes/inttypes.h	78;"	d
PRIdFAST32	include/rapidjson/msinttypes/inttypes.h	85;"	d
PRIdFAST64	include/rapidjson/msinttypes/inttypes.h	92;"	d
PRIdFAST8	include/rapidjson/msinttypes/inttypes.h	71;"	d
PRIdLEAST16	include/rapidjson/msinttypes/inttypes.h	76;"	d
PRIdLEAST32	include/rapidjson/msinttypes/inttypes.h	83;"	d
PRIdLEAST64	include/rapidjson/msinttypes/inttypes.h	90;"	d
PRIdLEAST8	include/rapidjson/msinttypes/inttypes.h	69;"	d
PRIdMAX	include/rapidjson/msinttypes/inttypes.h	95;"	d
PRIdPTR	include/rapidjson/msinttypes/inttypes.h	98;"	d
PRIi16	include/rapidjson/msinttypes/inttypes.h	75;"	d
PRIi32	include/rapidjson/msinttypes/inttypes.h	82;"	d
PRIi64	include/rapidjson/msinttypes/inttypes.h	89;"	d
PRIi8	include/rapidjson/msinttypes/inttypes.h	68;"	d
PRIiFAST16	include/rapidjson/msinttypes/inttypes.h	79;"	d
PRIiFAST32	include/rapidjson/msinttypes/inttypes.h	86;"	d
PRIiFAST64	include/rapidjson/msinttypes/inttypes.h	93;"	d
PRIiFAST8	include/rapidjson/msinttypes/inttypes.h	72;"	d
PRIiLEAST16	include/rapidjson/msinttypes/inttypes.h	77;"	d
PRIiLEAST32	include/rapidjson/msinttypes/inttypes.h	84;"	d
PRIiLEAST64	include/rapidjson/msinttypes/inttypes.h	91;"	d
PRIiLEAST8	include/rapidjson/msinttypes/inttypes.h	70;"	d
PRIiMAX	include/rapidjson/msinttypes/inttypes.h	96;"	d
PRIiPTR	include/rapidjson/msinttypes/inttypes.h	99;"	d
PRIo16	include/rapidjson/msinttypes/inttypes.h	115;"	d
PRIo32	include/rapidjson/msinttypes/inttypes.h	128;"	d
PRIo64	include/rapidjson/msinttypes/inttypes.h	141;"	d
PRIo8	include/rapidjson/msinttypes/inttypes.h	102;"	d
PRIoFAST16	include/rapidjson/msinttypes/inttypes.h	123;"	d
PRIoFAST32	include/rapidjson/msinttypes/inttypes.h	136;"	d
PRIoFAST64	include/rapidjson/msinttypes/inttypes.h	149;"	d
PRIoFAST8	include/rapidjson/msinttypes/inttypes.h	110;"	d
PRIoLEAST16	include/rapidjson/msinttypes/inttypes.h	119;"	d
PRIoLEAST32	include/rapidjson/msinttypes/inttypes.h	132;"	d
PRIoLEAST64	include/rapidjson/msinttypes/inttypes.h	145;"	d
PRIoLEAST8	include/rapidjson/msinttypes/inttypes.h	106;"	d
PRIoMAX	include/rapidjson/msinttypes/inttypes.h	154;"	d
PRIoPTR	include/rapidjson/msinttypes/inttypes.h	159;"	d
PRIu16	include/rapidjson/msinttypes/inttypes.h	116;"	d
PRIu32	include/rapidjson/msinttypes/inttypes.h	129;"	d
PRIu64	include/rapidjson/msinttypes/inttypes.h	142;"	d
PRIu8	include/rapidjson/msinttypes/inttypes.h	103;"	d
PRIuFAST16	include/rapidjson/msinttypes/inttypes.h	124;"	d
PRIuFAST32	include/rapidjson/msinttypes/inttypes.h	137;"	d
PRIuFAST64	include/rapidjson/msinttypes/inttypes.h	150;"	d
PRIuFAST8	include/rapidjson/msinttypes/inttypes.h	111;"	d
PRIuLEAST16	include/rapidjson/msinttypes/inttypes.h	120;"	d
PRIuLEAST32	include/rapidjson/msinttypes/inttypes.h	133;"	d
PRIuLEAST64	include/rapidjson/msinttypes/inttypes.h	146;"	d
PRIuLEAST8	include/rapidjson/msinttypes/inttypes.h	107;"	d
PRIuMAX	include/rapidjson/msinttypes/inttypes.h	155;"	d
PRIuPTR	include/rapidjson/msinttypes/inttypes.h	160;"	d
PRIx16	include/rapidjson/msinttypes/inttypes.h	117;"	d
PRIx32	include/rapidjson/msinttypes/inttypes.h	130;"	d
PRIx64	include/rapidjson/msinttypes/inttypes.h	143;"	d
PRIx8	include/rapidjson/msinttypes/inttypes.h	104;"	d
PRIxFAST16	include/rapidjson/msinttypes/inttypes.h	125;"	d
PRIxFAST32	include/rapidjson/msinttypes/inttypes.h	138;"	d
PRIxFAST64	include/rapidjson/msinttypes/inttypes.h	151;"	d
PRIxFAST8	include/rapidjson/msinttypes/inttypes.h	112;"	d
PRIxLEAST16	include/rapidjson/msinttypes/inttypes.h	121;"	d
PRIxLEAST32	include/rapidjson/msinttypes/inttypes.h	134;"	d
PRIxLEAST64	include/rapidjson/msinttypes/inttypes.h	147;"	d
PRIxLEAST8	include/rapidjson/msinttypes/inttypes.h	108;"	d
PRIxMAX	include/rapidjson/msinttypes/inttypes.h	156;"	d
PRIxPTR	include/rapidjson/msinttypes/inttypes.h	161;"	d
PTRDIFF_MAX	include/rapidjson/msinttypes/stdint.h	239;"	d
PTRDIFF_MAX	include/rapidjson/msinttypes/stdint.h	242;"	d
PTRDIFF_MIN	include/rapidjson/msinttypes/stdint.h	238;"	d
PTRDIFF_MIN	include/rapidjson/msinttypes/stdint.h	241;"	d
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const Ch* str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/pointer.h	/^    void Parse(const Ch* source, size_t length) {$/;"	f	class:GenericPointer
Parse	include/rapidjson/reader.h	/^    ParseResult Parse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseArray	include/rapidjson/reader.h	/^    void ParseArray(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseErrorCode	include/rapidjson/error/error.h	/^enum ParseErrorCode {$/;"	g
ParseFalse	include/rapidjson/reader.h	/^    void ParseFalse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseFlag	include/rapidjson/reader.h	/^enum ParseFlag {$/;"	g
ParseHex4	include/rapidjson/reader.h	/^    unsigned ParseHex4(InputStream& is) {$/;"	f	class:GenericReader
ParseInsitu	include/rapidjson/document.h	/^    GenericDocument& ParseInsitu(Ch* str) {$/;"	f	class:GenericDocument
ParseNull	include/rapidjson/reader.h	/^    void ParseNull(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseNumber	include/rapidjson/reader.h	/^    void ParseNumber(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseObject	include/rapidjson/reader.h	/^    void ParseObject(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseResult	include/rapidjson/error/error.h	/^    ParseResult() : code_(kParseErrorNone), offset_(0) {}$/;"	f	struct:ParseResult
ParseResult	include/rapidjson/error/error.h	/^    ParseResult(ParseErrorCode code, size_t offset) : code_(code), offset_(offset) {}$/;"	f	struct:ParseResult
ParseResult	include/rapidjson/error/error.h	/^struct ParseResult {$/;"	s
ParseStream	include/rapidjson/document.h	/^    GenericDocument& ParseStream(InputStream& is) {$/;"	f	class:GenericDocument
ParseString	include/rapidjson/reader.h	/^    void ParseString(InputStream& is, Handler& handler, bool isKey = false) {$/;"	f	class:GenericReader
ParseStringToStream	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE void ParseStringToStream(InputStream& is, OutputStream& os) {$/;"	f	class:GenericReader
ParseTrue	include/rapidjson/reader.h	/^    void ParseTrue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseUint64	include/rapidjson/internal/biginteger.h	/^    static uint64_t ParseUint64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
ParseValue	include/rapidjson/reader.h	/^    void ParseValue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:AutoUTFOutputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:EncodedOutputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:AutoUTFInputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:EncodedInputStream
Peek	include/rapidjson/filereadstream.h	/^    Ch Peek() const { return *current_; }$/;"	f	class:FileReadStream
Peek	include/rapidjson/filewritestream.h	/^    char Peek() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Peek	include/rapidjson/memorystream.h	/^    Ch Peek() const { return (src_ == end_) ? '\\0' : *src_; }$/;"	f	struct:MemoryStream
Peek	include/rapidjson/rapidjson.h	/^    Ch Peek() const { return *src_; }$/;"	f	struct:GenericStringStream
Peek	include/rapidjson/rapidjson.h	/^    Ch Peek() { return *src_; }$/;"	f	struct:GenericInsituStringStream
Peek	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Peek() const { return is.Peek(); }$/;"	f	class:GenericReader::NumberStream
Peek4	include/rapidjson/filereadstream.h	/^    const Ch* Peek4() const {$/;"	f	class:FileReadStream
Peek4	include/rapidjson/memorystream.h	/^    const Ch* Peek4() const {$/;"	f	struct:MemoryStream
PercentDecodeStream	include/rapidjson/pointer.h	/^        PercentDecodeStream(const Ch* source, const Ch* end) : src_(source), head_(source), end_(end), valid_(true) {}$/;"	f	class:GenericPointer::PercentDecodeStream
PercentDecodeStream	include/rapidjson/pointer.h	/^    class PercentDecodeStream {$/;"	c	class:GenericPointer
PercentEncodeStream	include/rapidjson/pointer.h	/^        PercentEncodeStream(OutputStream& os) : os_(os) {}$/;"	f	class:GenericPointer::PercentEncodeStream
PercentEncodeStream	include/rapidjson/pointer.h	/^    class PercentEncodeStream {$/;"	c	class:GenericPointer
PlainType	include/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator> PlainType;$/;"	t	class:GenericMemberIterator
Pointer	include/rapidjson/document.h	/^    typedef typename BaseType::pointer         Pointer;$/;"	t	class:GenericMemberIterator
Pointer	include/rapidjson/pointer.h	/^typedef GenericPointer<Value> Pointer;$/;"	t
PointerParseErrorCode	include/rapidjson/pointer.h	/^enum PointerParseErrorCode {$/;"	g
Pop	include/rapidjson/internal/stack.h	/^    T* Pop(size_t count) {$/;"	f	class:internal::Stack
Pop	include/rapidjson/memorybuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Pop	include/rapidjson/rapidjson.h	/^    void Pop(size_t count) { dst_ -= count; }$/;"	f	struct:GenericInsituStringStream
Pop	include/rapidjson/reader.h	/^        Ch* Pop() {$/;"	f	class:GenericReader::StackStream
Pop	include/rapidjson/reader.h	/^        const char* Pop() { return 0; }$/;"	f	class:GenericReader::NumberStream
Pop	include/rapidjson/reader.h	/^        const char* Pop() {$/;"	f	class:GenericReader::NumberStream
Pop	include/rapidjson/stringbuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	class:GenericStringBuffer
PopBack	include/rapidjson/document.h	/^    GenericValue& PopBack() {$/;"	f	class:GenericValue
PopSize	include/BasicDE.h	/^		int PopSize;$/;"	m	class:BasicDE
PopSize	include/BasicDE.h	/^		int PopSize;$/;"	m	class:BasicDE1
Pow10	include/rapidjson/internal/pow10.h	/^inline double Pow10(int n) {$/;"	f	namespace:internal
Predict	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Predict(IterativeParsingState state, Token token) {$/;"	f	class:GenericReader
Prefix	include/rapidjson/writer.h	/^    void Prefix(Type type) {$/;"	f	class:Writer
Prettify	include/rapidjson/internal/dtoa.h	/^inline char* Prettify(char* buffer, int length, int k) {$/;"	f	namespace:internal
PrettyPrefix	include/rapidjson/prettywriter.h	/^    void PrettyPrefix(Type type) {$/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^    PrettyWriter(OutputStream& os, StackAllocator* allocator = 0, size_t levelDepth = Base::kDefaultLevelDepth) : $/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^class PrettyWriter : public Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator> {$/;"	c
Push	include/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE T* Push(size_t count = 1) {$/;"	f	class:internal::Stack
Push	include/rapidjson/memorybuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Push	include/rapidjson/rapidjson.h	/^    Ch* Push(size_t count) { Ch* begin = dst_; dst_ += count; return begin; }$/;"	f	struct:GenericInsituStringStream
Push	include/rapidjson/stringbuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	class:GenericStringBuffer
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    PushBack(T value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/internal/biginteger.h	/^    void PushBack(Type digit) {$/;"	f	class:internal::BigInteger
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch c) { Encoding::Put(os_, c);  }$/;"	f	class:EncodedOutputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch c) { putFunc_(*os_, c); }$/;"	f	class:AutoUTFOutputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFInputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:EncodedInputStream
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:ASCII
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:UTF8
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16BE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16LE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32BE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32LE
Put	include/rapidjson/filereadstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:FileReadStream
Put	include/rapidjson/filewritestream.h	/^    void Put(char c) { $/;"	f	class:FileWriteStream
Put	include/rapidjson/memorybuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	struct:GenericMemoryBuffer
Put	include/rapidjson/memorystream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
Put	include/rapidjson/pointer.h	/^        void Put(char c) { \/\/ UTF-8 must be byte$/;"	f	class:GenericPointer::PercentEncodeStream
Put	include/rapidjson/rapidjson.h	/^    void Put(Ch c) { RAPIDJSON_ASSERT(dst_ != 0); *dst_++ = c; }$/;"	f	struct:GenericInsituStringStream
Put	include/rapidjson/rapidjson.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Put	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void Put(Ch c) {$/;"	f	class:GenericReader::StackStream
Put	include/rapidjson/stringbuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	class:GenericStringBuffer
PutBOM	include/rapidjson/encodedstream.h	/^    void PutBOM() { $/;"	f	class:AutoUTFOutputStream
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:ASCII
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16BE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16LE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32BE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32LE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF8
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutBegin	include/rapidjson/filereadstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutBegin	include/rapidjson/filewritestream.h	/^    char* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutBegin	include/rapidjson/memorystream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutBegin	include/rapidjson/rapidjson.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutBegin	include/rapidjson/rapidjson.h	/^    Ch* PutBegin() { return dst_ = src_; }$/;"	f	struct:GenericInsituStringStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutEnd	include/rapidjson/filereadstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutEnd	include/rapidjson/filewritestream.h	/^    size_t PutEnd(char*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutEnd	include/rapidjson/memorystream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutEnd	include/rapidjson/rapidjson.h	/^    size_t PutEnd(Ch* begin) { return static_cast<size_t>(dst_ - begin); }$/;"	f	struct:GenericInsituStringStream
PutEnd	include/rapidjson/rapidjson.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutFunc	include/rapidjson/encodedstream.h	/^    typedef void (*PutFunc)(OutputByteStream&, Ch);$/;"	t	class:AutoUTFOutputStream
PutN	include/rapidjson/filewritestream.h	/^    void PutN(char c, size_t n) {$/;"	f	class:FileWriteStream
PutN	include/rapidjson/filewritestream.h	/^inline void PutN(FileWriteStream& stream, char c, size_t n) {$/;"	f
PutN	include/rapidjson/memorybuffer.h	/^inline void PutN(MemoryBuffer& memoryBuffer, char c, size_t n) {$/;"	f
PutN	include/rapidjson/rapidjson.h	/^inline void PutN(Stream& stream, Ch c, size_t n) {$/;"	f
PutN	include/rapidjson/stringbuffer.h	/^inline void PutN(GenericStringBuffer<UTF8<> >& stream, char c, size_t n) {$/;"	f
R	cir.h	/^double R;$/;"	v
R1	cir.h	/^double C4,R4,R1;$/;"	v
R2	cir.h	/^double RC3,C2,\/*RC2,*\/C3,R2;$/;"	v
R4	cir.h	/^double C4,R4,R1;$/;"	v
RAPIDJSON_64BIT	include/rapidjson/rapidjson.h	227;"	d
RAPIDJSON_64BIT	include/rapidjson/rapidjson.h	229;"	d
RAPIDJSON_ALIGN	include/rapidjson/rapidjson.h	245;"	d
RAPIDJSON_ALIGN	include/rapidjson/rapidjson.h	247;"	d
RAPIDJSON_ALLOCATORS_H_	include/rapidjson/allocators.h	16;"	d
RAPIDJSON_ASSERT	include/rapidjson/rapidjson.h	344;"	d
RAPIDJSON_BIGENDIAN	include/rapidjson/rapidjson.h	169;"	d
RAPIDJSON_BIGINTEGER_H_	include/rapidjson/internal/biginteger.h	16;"	d
RAPIDJSON_DELETE	include/rapidjson/rapidjson.h	484;"	d
RAPIDJSON_DIAG_OFF	include/rapidjson/rapidjson.h	406;"	d
RAPIDJSON_DIAG_POP	include/rapidjson/rapidjson.h	412;"	d
RAPIDJSON_DIAG_PRAGMA	include/rapidjson/rapidjson.h	405;"	d
RAPIDJSON_DIAG_PUSH	include/rapidjson/rapidjson.h	411;"	d
RAPIDJSON_DISABLEIF	include/rapidjson/internal/meta.h	159;"	d
RAPIDJSON_DISABLEIF_RETURN	include/rapidjson/internal/meta.h	168;"	d
RAPIDJSON_DIYFP_H_	include/rapidjson/internal/diyfp.h	20;"	d
RAPIDJSON_DOCUMENT_H_	include/rapidjson/document.h	16;"	d
RAPIDJSON_DO_JOIN	include/rapidjson/rapidjson.h	360;"	d
RAPIDJSON_DO_JOIN2	include/rapidjson/rapidjson.h	361;"	d
RAPIDJSON_DO_STRINGIFY	include/rapidjson/rapidjson.h	51;"	d
RAPIDJSON_DTOA_	include/rapidjson/internal/dtoa.h	20;"	d
RAPIDJSON_ENABLEIF	include/rapidjson/internal/meta.h	155;"	d
RAPIDJSON_ENABLEIF_RETURN	include/rapidjson/internal/meta.h	163;"	d
RAPIDJSON_ENCODEDSTREAM_H_	include/rapidjson/encodedstream.h	16;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodedstream.h	253;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodedstream.h	93;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodings.h	555;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodings.h	578;"	d
RAPIDJSON_ENCODINGS_H_	include/rapidjson/encodings.h	16;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	188;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	190;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	198;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	200;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	206;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	208;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	211;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	213;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	215;"	d
RAPIDJSON_ERROR_CHARTYPE	include/rapidjson/error/error.h	34;"	d
RAPIDJSON_ERROR_EN_H__	include/rapidjson/error/en.h	16;"	d
RAPIDJSON_ERROR_ERROR_H__	include/rapidjson/error/error.h	16;"	d
RAPIDJSON_ERROR_STRING	include/rapidjson/error/error.h	47;"	d
RAPIDJSON_FILEREADSTREAM_H_	include/rapidjson/filereadstream.h	16;"	d
RAPIDJSON_FILEWRITESTREAM_H_	include/rapidjson/filewritestream.h	16;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	157;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	159;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	161;"	d
RAPIDJSON_GNUC	include/rapidjson/rapidjson.h	398;"	d
RAPIDJSON_HAS_CXX11_NOEXCEPT	include/rapidjson/rapidjson.h	454;"	d
RAPIDJSON_HAS_CXX11_RVALUE_REFS	include/rapidjson/rapidjson.h	441;"	d
RAPIDJSON_HAS_CXX11_TYPETRAITS	include/rapidjson/rapidjson.h	470;"	d
RAPIDJSON_HAS_STDSTRING	include/rapidjson/document.h	38;"	d
RAPIDJSON_IEEE754_	include/rapidjson/internal/ieee754.h	16;"	d
RAPIDJSON_INTERNAL_META_H_	include/rapidjson/internal/meta.h	16;"	d
RAPIDJSON_INTERNAL_STACK_H_	include/rapidjson/internal/stack.h	16;"	d
RAPIDJSON_INTERNAL_STRFUNC_H_	include/rapidjson/internal/strfunc.h	16;"	d
RAPIDJSON_INTERNAL_SWAP_H_	include/rapidjson/internal/swap.h	16;"	d
RAPIDJSON_ITOA_	include/rapidjson/internal/itoa.h	16;"	d
RAPIDJSON_JOIN	include/rapidjson/rapidjson.h	359;"	d
RAPIDJSON_LITTLEENDIAN	include/rapidjson/rapidjson.h	168;"	d
RAPIDJSON_MAJOR_VERSION	include/rapidjson/rapidjson.h	70;"	d
RAPIDJSON_MEMORYBUFFER_H_	include/rapidjson/memorybuffer.h	16;"	d
RAPIDJSON_MEMORYSTREAM_H_	include/rapidjson/memorystream.h	16;"	d
RAPIDJSON_MINOR_VERSION	include/rapidjson/rapidjson.h	71;"	d
RAPIDJSON_MULTILINEMACRO_BEGIN	include/rapidjson/rapidjson.h	386;"	d
RAPIDJSON_MULTILINEMACRO_END	include/rapidjson/rapidjson.h	387;"	d
RAPIDJSON_NAMESPACE	include/rapidjson/rapidjson.h	113;"	d
RAPIDJSON_NAMESPACE_BEGIN	include/rapidjson/rapidjson.h	116;"	d
RAPIDJSON_NAMESPACE_END	include/rapidjson/rapidjson.h	119;"	d
RAPIDJSON_NEW	include/rapidjson/rapidjson.h	480;"	d
RAPIDJSON_NOEXCEPT	include/rapidjson/document.h	/^    GenericStringRef(const CharType (&str)[N]) RAPIDJSON_NOEXCEPT$/;"	m	struct:GenericStringRef
RAPIDJSON_NOEXCEPT	include/rapidjson/rapidjson.h	463;"	d
RAPIDJSON_NOTHING	include/rapidjson/reader.h	48;"	d
RAPIDJSON_NO_INT64DEFINE	include/rapidjson/rapidjson.h	147;"	d
RAPIDJSON_NO_SIZETYPEDEFINE	include/rapidjson/rapidjson.h	314;"	d
RAPIDJSON_PARSE_DEFAULT_FLAGS	include/rapidjson/reader.h	130;"	d
RAPIDJSON_PARSE_ERROR	include/rapidjson/reader.h	109;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN	include/rapidjson/reader.h	50;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN_VOID	include/rapidjson/reader.h	55;"	d
RAPIDJSON_PARSE_ERROR_NORETURN	include/rapidjson/reader.h	90;"	d
RAPIDJSON_PATCH_VERSION	include/rapidjson/rapidjson.h	72;"	d
RAPIDJSON_POINTER_H_	include/rapidjson/pointer.h	16;"	d
RAPIDJSON_POW10_	include/rapidjson/internal/pow10.h	16;"	d
RAPIDJSON_PRAGMA	include/rapidjson/rapidjson.h	404;"	d
RAPIDJSON_PRETTYWRITER_H_	include/rapidjson/prettywriter.h	16;"	d
RAPIDJSON_RAPIDJSON_H_	include/rapidjson/rapidjson.h	16;"	d
RAPIDJSON_READER_H_	include/rapidjson/reader.h	16;"	d
RAPIDJSON_REMOVEFPTR_	include/rapidjson/internal/meta.h	151;"	d
RAPIDJSON_SIMD	include/rapidjson/rapidjson.h	291;"	d
RAPIDJSON_STATIC_ASSERT	include/rapidjson/rapidjson.h	375;"	d
RAPIDJSON_STATIC_ASSERT_UNUSED_ATTRIBUTE	include/rapidjson/rapidjson.h	364;"	d
RAPIDJSON_STRINGBUFFER_H_	include/rapidjson/stringbuffer.h	16;"	d
RAPIDJSON_STRINGIFY	include/rapidjson/rapidjson.h	50;"	d
RAPIDJSON_STRTOD_	include/rapidjson/internal/strtod.h	16;"	d
RAPIDJSON_UINT64_C2	include/rapidjson/rapidjson.h	261;"	d
RAPIDJSON_VERSION_CODE	include/rapidjson/rapidjson.h	391;"	d
RAPIDJSON_VERSION_STRING	include/rapidjson/rapidjson.h	73;"	d
RAPIDJSON_WRITER_H_	include/rapidjson/writer.h	16;"	d
RC	cir.h	82;"	d
RC2	cir.h	85;"	d
RC3	cir.h	/^double RC3,C2,\/*RC2,*\/C3,R2;$/;"	v
RC4	cir.h	93;"	d
RD	cir.h	74;"	d
RE	cir.h	73;"	d
RL	cir.h	81;"	d
RS	cir.h	/^int RS=sizeof(STD_R)\/sizeof(double);\/\/RS=74$/;"	v
RT	cir.h	75;"	d
RandomPermutation	include/utils.h	/^		RandomPermutation(int tn):n(tn),i(0){$/;"	f	class:RandomPermutation
RandomPermutation	include/utils.h	/^class RandomPermutation{$/;"	c
Read	include/rapidjson/filereadstream.h	/^    void Read() {$/;"	f	class:FileReadStream
Reader	include/rapidjson/reader.h	/^typedef GenericReader<UTF8<>, UTF8<> > Reader;$/;"	t
Realloc	include/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) {$/;"	f	class:CrtAllocator
Realloc	include/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) {$/;"	f	class:MemoryPoolAllocator
Reference	include/rapidjson/document.h	/^    typedef typename BaseType::reference       Reference;$/;"	t	class:GenericMemberIterator
RemoveAllMembers	include/rapidjson/document.h	/^    void RemoveAllMembers() {$/;"	f	class:GenericValue
RemoveConst	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	s	namespace:internal
RemoveConst	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	s	namespace:internal
RemoveMember	include/rapidjson/document.h	/^    MemberIterator RemoveMember(MemberIterator m) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const Ch* name) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const std::basic_string<Ch>& name) { return RemoveMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
RemoveSfinaeTag	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	s	namespace:internal
Reserve	include/rapidjson/document.h	/^    GenericValue& Reserve(SizeType newCapacity, Allocator &allocator) {$/;"	f	class:GenericValue
Reset	include/rapidjson/writer.h	/^    void Reset(OutputStream& os) {$/;"	f	class:Writer
Resize	include/rapidjson/internal/stack.h	/^    void Resize(size_t newCapacity) {$/;"	f	class:internal::Stack
RightBracketToken	include/rapidjson/reader.h	/^        RightBracketToken,$/;"	e	enum:GenericReader::Token
RightCurlyBracketToken	include/rapidjson/reader.h	/^        RightCurlyBracketToken,$/;"	e	enum:GenericReader::Token
SCNX16	include/rapidjson/msinttypes/inttypes.h	221;"	d
SCNX32	include/rapidjson/msinttypes/inttypes.h	234;"	d
SCNX64	include/rapidjson/msinttypes/inttypes.h	247;"	d
SCNX8	include/rapidjson/msinttypes/inttypes.h	208;"	d
SCNXFAST16	include/rapidjson/msinttypes/inttypes.h	229;"	d
SCNXFAST32	include/rapidjson/msinttypes/inttypes.h	242;"	d
SCNXFAST64	include/rapidjson/msinttypes/inttypes.h	255;"	d
SCNXFAST8	include/rapidjson/msinttypes/inttypes.h	216;"	d
SCNXLEAST16	include/rapidjson/msinttypes/inttypes.h	225;"	d
SCNXLEAST32	include/rapidjson/msinttypes/inttypes.h	238;"	d
SCNXLEAST64	include/rapidjson/msinttypes/inttypes.h	251;"	d
SCNXLEAST8	include/rapidjson/msinttypes/inttypes.h	212;"	d
SCNXMAX	include/rapidjson/msinttypes/inttypes.h	260;"	d
SCNXPTR	include/rapidjson/msinttypes/inttypes.h	266;"	d
SCNXPTR	include/rapidjson/msinttypes/inttypes.h	271;"	d
SCNd16	include/rapidjson/msinttypes/inttypes.h	172;"	d
SCNd32	include/rapidjson/msinttypes/inttypes.h	179;"	d
SCNd64	include/rapidjson/msinttypes/inttypes.h	186;"	d
SCNd8	include/rapidjson/msinttypes/inttypes.h	165;"	d
SCNdFAST16	include/rapidjson/msinttypes/inttypes.h	176;"	d
SCNdFAST32	include/rapidjson/msinttypes/inttypes.h	183;"	d
SCNdFAST64	include/rapidjson/msinttypes/inttypes.h	190;"	d
SCNdFAST8	include/rapidjson/msinttypes/inttypes.h	169;"	d
SCNdLEAST16	include/rapidjson/msinttypes/inttypes.h	174;"	d
SCNdLEAST32	include/rapidjson/msinttypes/inttypes.h	181;"	d
SCNdLEAST64	include/rapidjson/msinttypes/inttypes.h	188;"	d
SCNdLEAST8	include/rapidjson/msinttypes/inttypes.h	167;"	d
SCNdMAX	include/rapidjson/msinttypes/inttypes.h	193;"	d
SCNdPTR	include/rapidjson/msinttypes/inttypes.h	197;"	d
SCNdPTR	include/rapidjson/msinttypes/inttypes.h	200;"	d
SCNi16	include/rapidjson/msinttypes/inttypes.h	173;"	d
SCNi32	include/rapidjson/msinttypes/inttypes.h	180;"	d
SCNi64	include/rapidjson/msinttypes/inttypes.h	187;"	d
SCNi8	include/rapidjson/msinttypes/inttypes.h	166;"	d
SCNiFAST16	include/rapidjson/msinttypes/inttypes.h	177;"	d
SCNiFAST32	include/rapidjson/msinttypes/inttypes.h	184;"	d
SCNiFAST64	include/rapidjson/msinttypes/inttypes.h	191;"	d
SCNiFAST8	include/rapidjson/msinttypes/inttypes.h	170;"	d
SCNiLEAST16	include/rapidjson/msinttypes/inttypes.h	175;"	d
SCNiLEAST32	include/rapidjson/msinttypes/inttypes.h	182;"	d
SCNiLEAST64	include/rapidjson/msinttypes/inttypes.h	189;"	d
SCNiLEAST8	include/rapidjson/msinttypes/inttypes.h	168;"	d
SCNiMAX	include/rapidjson/msinttypes/inttypes.h	194;"	d
SCNiPTR	include/rapidjson/msinttypes/inttypes.h	198;"	d
SCNiPTR	include/rapidjson/msinttypes/inttypes.h	201;"	d
SCNo16	include/rapidjson/msinttypes/inttypes.h	218;"	d
SCNo32	include/rapidjson/msinttypes/inttypes.h	231;"	d
SCNo64	include/rapidjson/msinttypes/inttypes.h	244;"	d
SCNo8	include/rapidjson/msinttypes/inttypes.h	205;"	d
SCNoFAST16	include/rapidjson/msinttypes/inttypes.h	226;"	d
SCNoFAST32	include/rapidjson/msinttypes/inttypes.h	239;"	d
SCNoFAST64	include/rapidjson/msinttypes/inttypes.h	252;"	d
SCNoFAST8	include/rapidjson/msinttypes/inttypes.h	213;"	d
SCNoLEAST16	include/rapidjson/msinttypes/inttypes.h	222;"	d
SCNoLEAST32	include/rapidjson/msinttypes/inttypes.h	235;"	d
SCNoLEAST64	include/rapidjson/msinttypes/inttypes.h	248;"	d
SCNoLEAST8	include/rapidjson/msinttypes/inttypes.h	209;"	d
SCNoMAX	include/rapidjson/msinttypes/inttypes.h	257;"	d
SCNoPTR	include/rapidjson/msinttypes/inttypes.h	263;"	d
SCNoPTR	include/rapidjson/msinttypes/inttypes.h	268;"	d
SCNu16	include/rapidjson/msinttypes/inttypes.h	219;"	d
SCNu32	include/rapidjson/msinttypes/inttypes.h	232;"	d
SCNu64	include/rapidjson/msinttypes/inttypes.h	245;"	d
SCNu8	include/rapidjson/msinttypes/inttypes.h	206;"	d
SCNuFAST16	include/rapidjson/msinttypes/inttypes.h	227;"	d
SCNuFAST32	include/rapidjson/msinttypes/inttypes.h	240;"	d
SCNuFAST64	include/rapidjson/msinttypes/inttypes.h	253;"	d
SCNuFAST8	include/rapidjson/msinttypes/inttypes.h	214;"	d
SCNuLEAST16	include/rapidjson/msinttypes/inttypes.h	223;"	d
SCNuLEAST32	include/rapidjson/msinttypes/inttypes.h	236;"	d
SCNuLEAST64	include/rapidjson/msinttypes/inttypes.h	249;"	d
SCNuLEAST8	include/rapidjson/msinttypes/inttypes.h	210;"	d
SCNuMAX	include/rapidjson/msinttypes/inttypes.h	258;"	d
SCNuPTR	include/rapidjson/msinttypes/inttypes.h	264;"	d
SCNuPTR	include/rapidjson/msinttypes/inttypes.h	269;"	d
SCNx16	include/rapidjson/msinttypes/inttypes.h	220;"	d
SCNx32	include/rapidjson/msinttypes/inttypes.h	233;"	d
SCNx64	include/rapidjson/msinttypes/inttypes.h	246;"	d
SCNx8	include/rapidjson/msinttypes/inttypes.h	207;"	d
SCNxFAST16	include/rapidjson/msinttypes/inttypes.h	228;"	d
SCNxFAST32	include/rapidjson/msinttypes/inttypes.h	241;"	d
SCNxFAST64	include/rapidjson/msinttypes/inttypes.h	254;"	d
SCNxFAST8	include/rapidjson/msinttypes/inttypes.h	215;"	d
SCNxLEAST16	include/rapidjson/msinttypes/inttypes.h	224;"	d
SCNxLEAST32	include/rapidjson/msinttypes/inttypes.h	237;"	d
SCNxLEAST64	include/rapidjson/msinttypes/inttypes.h	250;"	d
SCNxLEAST8	include/rapidjson/msinttypes/inttypes.h	211;"	d
SCNxMAX	include/rapidjson/msinttypes/inttypes.h	259;"	d
SCNxPTR	include/rapidjson/msinttypes/inttypes.h	265;"	d
SCNxPTR	include/rapidjson/msinttypes/inttypes.h	270;"	d
SETTING_PARSER_H	include/settingParser.h	3;"	d
SIGNAL_HANDLE_HELPER	include/SignalHandleHelper.h	3;"	d
SIG_ATOMIC_MAX	include/rapidjson/msinttypes/stdint.h	246;"	d
SIG_ATOMIC_MIN	include/rapidjson/msinttypes/stdint.h	245;"	d
SIZE_MAX	include/rapidjson/msinttypes/stdint.h	250;"	d
SIZE_MAX	include/rapidjson/msinttypes/stdint.h	252;"	d
SS	include/cec14_test_func.h	/^int ini_flag,n_flag,func_flag,*SS;$/;"	v
STATIC_ASSERTION_FAILURE	include/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	s
STD_C	cir.h	/^double STD_C[]={1.0,1.1,1.2,1.3,1.5,1.6,1.8,2.0,2.2,2.4,2.7,3.0,3.3,3.6,3.9,4.3,4.7,5.1,5.6,6.2,6.8,7.5,8.2,9.1,10};$/;"	v
STD_R	cir.h	/^double STD_R[]={100,110,120,130,150,160,180,200,220,240,270,300,330,360,390,430,470,510,560,620,680,750,820,910,$/;"	v
SW	cir.h	/^double X[nX], V[nV], SW[nSW];$/;"	v
SW0	cir.h	/^double X0[nX],V0[nV],SW0[nSW];$/;"	v
SW2	cir.h	/^double X2[nX],V2[nV],SW2[nSW];$/;"	v
Save	include/utils.h	/^			Save(){$/;"	f	class:Save
Save	include/utils.h	/^		Save(const char *title){$/;"	f	class:Save
Save	include/utils.h	/^		Save(const char *title,const char *x,const char *y){$/;"	f	class:Save
Save	include/utils.h	/^class Save{$/;"	c
SaveData	include/BasicDE.h	164;"	d
SaveData	include/BasicDE.h	165;"	d
SaveData	include/BasicDE.h	173;"	d
SaveData	include/BasicDE.h	65;"	d
SaveData	include/BasicDE.h	66;"	d
SaveData	include/BasicDE.h	73;"	d
SearchParam	include/BasicDE.h	/^typedef SettingParser SearchParam ;$/;"	t
SearchParam	include/functions.h	/^typedef SettingParser SearchParam ;$/;"	t
SelectIf	include/rapidjson/internal/meta.h	/^template <typename C, typename T1, typename T2> struct SelectIf : SelectIfCond<C::Value, T1, T2> {};$/;"	s	namespace:internal
SelectIfCond	include/rapidjson/internal/meta.h	/^template <bool C, typename T1, typename T2> struct SelectIfCond : SelectIfImpl<C>::template Apply<T1,T2> {};$/;"	s	namespace:internal
SelectIfImpl	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	namespace:internal
SelectIfImpl	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	namespace:internal
Set	include/rapidjson/error/error.h	/^    void Set(ParseErrorCode code, size_t offset = 0) { code_ = code; offset_ = offset; }$/;"	f	struct:ParseResult
Set	include/rapidjson/pointer.h	/^        Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, T value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    Set(ValueType& root, T value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, ValueType& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const Ch* value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const ValueType& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const std::basic_string<Ch>& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const Ch* value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const std::basic_string<Ch>& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
SetArray	include/rapidjson/document.h	/^    GenericValue& SetArray() {  this->~GenericValue(); new (this) GenericValue(kArrayType); return *this; }$/;"	f	class:GenericValue
SetArrayRaw	include/rapidjson/document.h	/^    void SetArrayRaw(GenericValue* values, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetBool	include/rapidjson/document.h	/^    GenericValue& SetBool(bool b) { this->~GenericValue(); new (this) GenericValue(b); return *this; }$/;"	f	class:GenericValue
SetDouble	include/rapidjson/document.h	/^    GenericValue& SetDouble(double d)       { this->~GenericValue(); new (this) GenericValue(d);    return *this; }$/;"	f	class:GenericValue
SetIndent	include/rapidjson/prettywriter.h	/^    PrettyWriter& SetIndent(Ch indentChar, unsigned indentCharCount) {$/;"	f	class:PrettyWriter
SetInt	include/rapidjson/document.h	/^    GenericValue& SetInt(int i)             { this->~GenericValue(); new (this) GenericValue(i);    return *this; }$/;"	f	class:GenericValue
SetInt64	include/rapidjson/document.h	/^    GenericValue& SetInt64(int64_t i64)     { this->~GenericValue(); new (this) GenericValue(i64);  return *this; }$/;"	f	class:GenericValue
SetLength	include/rapidjson/document.h	/^        inline void     SetLength(SizeType len) { str[LenPos] = (Ch)(MaxSize -  len); }$/;"	f	struct:GenericValue::ShortString
SetNull	include/rapidjson/document.h	/^    GenericValue& SetNull() { this->~GenericValue(); new (this) GenericValue(); return *this; }$/;"	f	class:GenericValue
SetObject	include/rapidjson/document.h	/^    GenericValue& SetObject() { this->~GenericValue(); new (this) GenericValue(kObjectType); return *this; }$/;"	f	class:GenericValue
SetObjectRaw	include/rapidjson/document.h	/^    void SetObjectRaw(Member* members, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetParseError	include/rapidjson/reader.h	/^    void SetParseError(ParseErrorCode code, size_t offset) { parseResult_.Set(code, offset); }$/;"	f	class:GenericReader
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(StringRefType s) { this->~GenericValue(); SetStringRaw(s); return *this; }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, Allocator& allocator) { return SetString(s, internal::StrLen(s), allocator); }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length) { return SetString(StringRef(s, length)); }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length, Allocator& allocator) { this->~GenericValue(); SetStringRaw(StringRef(s, length), allocator); return *this; }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const std::basic_string<Ch>& s, Allocator& allocator) { return SetString(s.data(), SizeType(s.size()), allocator); }$/;"	f	class:GenericValue
SetStringRaw	include/rapidjson/document.h	/^    void SetStringRaw(StringRefType s, Allocator& allocator) {$/;"	f	class:GenericValue
SetUint	include/rapidjson/document.h	/^    GenericValue& SetUint(unsigned u)       { this->~GenericValue(); new (this) GenericValue(u);    return *this; }$/;"	f	class:GenericValue
SetUint64	include/rapidjson/document.h	/^    GenericValue& SetUint64(uint64_t u64)   { this->~GenericValue(); new (this) GenericValue(u64);  return *this; }$/;"	f	class:GenericValue
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(DocumentType& document, const CharType(&source)[N], T2 value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, T2 value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(T& root, const CharType(&source)[N], T2 value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, T2 value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const std::basic_string<typename DocumentType::Ch>& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const typename DocumentType::Ch* value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const std::basic_string<typename DocumentType::Ch>& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::Ch* value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const std::basic_string<typename T::Ch>& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const typename T::Ch* value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const std::basic_string<typename T::Ch>& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::Ch* value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SettingParser	include/settingParser.h	/^		SettingParser(){}$/;"	f	class:SettingParser
SettingParser	include/settingParser.h	/^		SettingParser(SettingParser&p){$/;"	f	class:SettingParser
SettingParser	include/settingParser.h	/^		SettingParser(const char *file){$/;"	f	class:SettingParser
SettingParser	include/settingParser.h	/^class SettingParser{$/;"	c
SfinaeTag	include/rapidjson/internal/meta.h	/^struct SfinaeTag {};$/;"	s	namespace:internal
ShortString	include/rapidjson/document.h	/^    struct ShortString {$/;"	s	class:GenericValue
ShrinkToFit	include/rapidjson/internal/stack.h	/^    void ShrinkToFit() { $/;"	f	class:internal::Stack
ShrinkToFit	include/rapidjson/memorybuffer.h	/^    void ShrinkToFit() { stack_.ShrinkToFit(); }$/;"	f	struct:GenericMemoryBuffer
ShrinkToFit	include/rapidjson/stringbuffer.h	/^    void ShrinkToFit() {$/;"	f	class:GenericStringBuffer
Sign	include/rapidjson/internal/ieee754.h	/^    bool Sign() const { return (u_ & kSignMask) != 0; }$/;"	f	class:internal::Double
SignalHandleHelper	include/SignalHandleHelper.h	/^		SignalHandleHelper(){$/;"	f	class:SignalHandleHelper
SignalHandleHelper	include/SignalHandleHelper.h	/^class SignalHandleHelper{$/;"	c
SignalHandler	include/SignalHandleHelper.h	/^typedef void SignalHandler(int);$/;"	t	class:SignalHandleHelper
Significand	include/rapidjson/internal/ieee754.h	/^    uint64_t Significand() const { return u_ & kSignificandMask; }$/;"	f	class:internal::Double
Size	include/rapidjson/allocators.h	/^    size_t Size() const {$/;"	f	class:MemoryPoolAllocator
Size	include/rapidjson/document.h	/^    SizeType Size() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size; }$/;"	f	class:GenericValue
SizeType	include/rapidjson/rapidjson.h	/^typedef unsigned SizeType;$/;"	t
SkipWhitespace	include/rapidjson/reader.h	/^template<> inline void SkipWhitespace(InsituStringStream& is) { $/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^template<> inline void SkipWhitespace(StringStream& is) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^void SkipWhitespace(InputStream& is) {$/;"	f
SkipWhitespaceAndComments	include/rapidjson/reader.h	/^    void SkipWhitespaceAndComments(InputStream& is) {$/;"	f	class:GenericReader
SkipWhitespace_SIMD	include/rapidjson/reader.h	/^inline const char *SkipWhitespace_SIMD(const char* p) {$/;"	f
Spqa	cir.h	/^void Spqa()$/;"	f
Stack	include/rapidjson/internal/stack.h	/^    Stack(Allocator* allocator, size_t stackCapacity) : allocator_(allocator), ownAllocator_(0), stack_(0), stackTop_(0), stackEnd_(0), initialCapacity_(stackCapacity) {$/;"	f	class:internal::Stack
Stack	include/rapidjson/internal/stack.h	/^    Stack(Stack&& rhs)$/;"	f	class:internal::Stack
Stack	include/rapidjson/internal/stack.h	/^class Stack {$/;"	c	namespace:internal
StackStream	include/rapidjson/reader.h	/^        StackStream(internal::Stack<StackAllocator>& stack) : stack_(stack), length_(0) {}$/;"	f	class:GenericReader::StackStream
StackStream	include/rapidjson/reader.h	/^    class StackStream {$/;"	c	class:GenericReader
StartArray	include/rapidjson/document.h	/^    bool StartArray() { new (stack_.template Push<ValueType>()) ValueType(kArrayType); return true; }$/;"	f	class:GenericDocument
StartArray	include/rapidjson/prettywriter.h	/^    bool StartArray() {$/;"	f	class:PrettyWriter
StartArray	include/rapidjson/reader.h	/^    bool StartArray() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartArray	include/rapidjson/writer.h	/^    bool StartArray() {$/;"	f	class:Writer
StartObject	include/rapidjson/document.h	/^    bool StartObject() { new (stack_.template Push<ValueType>()) ValueType(kObjectType); return true; }$/;"	f	class:GenericDocument
StartObject	include/rapidjson/prettywriter.h	/^    bool StartObject() {$/;"	f	class:PrettyWriter
StartObject	include/rapidjson/reader.h	/^    bool StartObject() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartObject	include/rapidjson/writer.h	/^    bool StartObject() {$/;"	f	class:Writer
StaticAssertTest	include/rapidjson/rapidjson.h	/^template<int x> struct StaticAssertTest {};$/;"	s
StrLen	include/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const Ch* s) {$/;"	f	namespace:internal
StreamLocalCopy	include/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	include/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original), original_(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	include/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 0> {$/;"	c	namespace:internal
StreamLocalCopy	include/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 1> {$/;"	c	namespace:internal
StreamTraits	include/rapidjson/rapidjson.h	/^struct StreamTraits {$/;"	s
StreamTraits	include/rapidjson/rapidjson.h	/^struct StreamTraits<GenericInsituStringStream<Encoding> > {$/;"	s
StreamTraits	include/rapidjson/rapidjson.h	/^struct StreamTraits<GenericStringStream<Encoding> > {$/;"	s
String	include/rapidjson/document.h	/^    bool String(const Ch* str, SizeType length, bool copy) { $/;"	f	class:GenericDocument
String	include/rapidjson/document.h	/^    struct String {$/;"	s	class:GenericValue
String	include/rapidjson/prettywriter.h	/^    bool String(const Ch* str) { return String(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
String	include/rapidjson/prettywriter.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:PrettyWriter
String	include/rapidjson/prettywriter.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:PrettyWriter
String	include/rapidjson/reader.h	/^    bool String(const Ch*, SizeType, bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
String	include/rapidjson/writer.h	/^    bool String(const Ch* str) { return String(str, internal::StrLen(str)); }$/;"	f	class:Writer
String	include/rapidjson/writer.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:Writer
String	include/rapidjson/writer.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:Writer
StringBuffer	include/rapidjson/stringbuffer.h	/^typedef GenericStringBuffer<UTF8<> > StringBuffer;$/;"	t
StringEqual	include/rapidjson/document.h	/^    bool StringEqual(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str) {$/;"	f
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str, size_t length) {$/;"	f
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const std::basic_string<CharType>& str) {$/;"	f
StringRefType	include/rapidjson/document.h	/^    typedef GenericStringRef<Ch> StringRefType;     \/\/!< Reference to a constant string$/;"	t	class:GenericValue
StringStream	include/rapidjson/rapidjson.h	/^typedef GenericStringStream<UTF8<> > StringStream;$/;"	t
StringToken	include/rapidjson/reader.h	/^        StringToken,$/;"	e	enum:GenericReader::Token
Stringify	include/rapidjson/pointer.h	/^    bool Stringify(OutputStream& os) const {$/;"	f	class:GenericPointer
StringifyUriFragment	include/rapidjson/pointer.h	/^    bool StringifyUriFragment(OutputStream& os) const {$/;"	f	class:GenericPointer
StrtodBigInteger	include/rapidjson/internal/strtod.h	/^inline double StrtodBigInteger(double approx, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodDiyFp	include/rapidjson/internal/strtod.h	/^inline bool StrtodDiyFp(const char* decimals, size_t length, size_t decimalPosition, int exp, double* result) {$/;"	f	namespace:internal
StrtodFast	include/rapidjson/internal/strtod.h	/^inline bool StrtodFast(double d, int p, double* result) {$/;"	f	namespace:internal
StrtodFullPrecision	include/rapidjson/internal/strtod.h	/^inline double StrtodFullPrecision(double d, int p, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodNormalPrecision	include/rapidjson/internal/strtod.h	/^inline double StrtodNormalPrecision(double d, int p) {$/;"	f	namespace:internal
Swap	include/rapidjson/pointer.h	/^    ValueType& Swap(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, ValueType& value) const {$/;"	f	class:GenericPointer
Swap	include/rapidjson/pointer.h	/^    ValueType& Swap(ValueType& root, ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
SwapValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SwapValueByPointer(DocumentType& document, const CharType(&source)[N], typename DocumentType::ValueType& value) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SwapValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, typename DocumentType::ValueType& value) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SwapValueByPointer(T& root, const CharType(&source)[N], typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SwapValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
TAG	include/MPIHelper.h	16;"	d
TAG1	include/MPIHelper.h	17;"	d
TAG2	include/MPIHelper.h	18;"	d
TAG3	include/MPIHelper.h	19;"	d
TAG4	include/MPIHelper.h	20;"	d
TAIL	include/rapidjson/encodings.h	127;"	d
TAIL	include/rapidjson/encodings.h	149;"	d
TAIL	include/rapidjson/encodings.h	156;"	d
TAIL	include/rapidjson/encodings.h	175;"	d
TEMPLATE_H	include/template.h	3;"	d
TRANS	include/rapidjson/encodings.h	126;"	d
TRANS	include/rapidjson/encodings.h	148;"	d
TRANS	include/rapidjson/encodings.h	155;"	d
TRANS	include/rapidjson/encodings.h	174;"	d
Tagg	include/utils.h	/^void Tagg(const char *str){$/;"	f
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = Encoding::Take(is_); return c; }$/;"	f	class:EncodedInputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = takeFunc_(*is_); return c; }$/;"	f	class:AutoUTFInputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:AutoUTFOutputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:EncodedOutputStream
Take	include/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:ASCII
Take	include/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:UTF8
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16BE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16LE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32BE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32LE
Take	include/rapidjson/filereadstream.h	/^    Ch Take() { Ch c = *current_; Read(); return c; }$/;"	f	class:FileReadStream
Take	include/rapidjson/filewritestream.h	/^    char Take() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Take	include/rapidjson/memorystream.h	/^    Ch Take() { return (src_ == end_) ? '\\0' : *src_++; }$/;"	f	struct:MemoryStream
Take	include/rapidjson/pointer.h	/^        Ch Take() {$/;"	f	class:GenericPointer::PercentDecodeStream
Take	include/rapidjson/rapidjson.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericInsituStringStream
Take	include/rapidjson/rapidjson.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericStringStream
Take	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Take() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:ASCII
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16BE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16LE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32BE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32LE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF8
TakeFunc	include/rapidjson/encodedstream.h	/^    typedef Ch (*TakeFunc)(InputByteStream& is);$/;"	t	class:AutoUTFInputStream
TakePush	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
TakePush	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() {$/;"	f	class:GenericReader::NumberStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false);  return 0; }$/;"	f	class:EncodedOutputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_->Tell(); }$/;"	f	class:AutoUTFInputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_.Tell(); }$/;"	f	class:EncodedInputStream
Tell	include/rapidjson/filereadstream.h	/^    size_t Tell() const { return count_ + static_cast<size_t>(current_ - buffer_); }$/;"	f	class:FileReadStream
Tell	include/rapidjson/filewritestream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Tell	include/rapidjson/memorystream.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - begin_); }$/;"	f	struct:MemoryStream
Tell	include/rapidjson/pointer.h	/^        size_t Tell() const { return src_ - head_; }$/;"	f	class:GenericPointer::PercentDecodeStream
Tell	include/rapidjson/rapidjson.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericStringStream
Tell	include/rapidjson/rapidjson.h	/^    size_t Tell() { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericInsituStringStream
Tell	include/rapidjson/reader.h	/^        size_t Tell() { return is.Tell(); }$/;"	f	class:GenericReader::NumberStream
Test	include/utils.h	16;"	d
Tic	include/utils.h	/^		Tic(){}$/;"	f	class:Tic
Tic	include/utils.h	/^class Tic{$/;"	c
ToBias	include/rapidjson/internal/ieee754.h	/^    uint64_t ToBias() const { return (u_ & kSignMask) ? ~u_ + 1 : u_ | kSignMask; }$/;"	f	class:internal::Double
ToDouble	include/rapidjson/internal/diyfp.h	/^    double ToDouble() const {$/;"	f	struct:internal::DiyFp
Token	include/rapidjson/pointer.h	/^    struct Token {$/;"	s	class:GenericPointer
Token	include/rapidjson/reader.h	/^    enum Token {$/;"	g	class:GenericReader
Tokenize	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE Token Tokenize(Ch c) {$/;"	f	class:GenericReader
Top	include/rapidjson/internal/stack.h	/^    T* Top() { $/;"	f	class:internal::Stack
Trace	include/utils.h	14;"	d
Transcode	include/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Transcode(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Transcoder	include/rapidjson/encodings.h	/^struct Transcoder {$/;"	s
Transcoder	include/rapidjson/encodings.h	/^struct Transcoder<Encoding, Encoding> {$/;"	s
Transit	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Transit(IterativeParsingState src, Token token, IterativeParsingState dst, InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
TrueToken	include/rapidjson/reader.h	/^        TrueToken,$/;"	e	enum:GenericReader::Token
TrueType	include/rapidjson/internal/meta.h	/^typedef BoolType<true> TrueType;$/;"	t	namespace:internal
Ts	cir.h	100;"	d
Type	include/rapidjson/internal/biginteger.h	/^    typedef uint64_t Type;$/;"	t	class:internal::BigInteger
Type	include/rapidjson/internal/meta.h	/^    typedef BoolType Type;$/;"	t	struct:internal::BoolType
Type	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	t	struct:internal::DisableIfCond
Type	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	t	struct:internal::EnableIfCond
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	t	struct:internal::AddConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	t	struct:internal::RemoveSfinaeTag
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	t	struct:internal::Void
Type	include/rapidjson/rapidjson.h	/^enum Type {$/;"	g
U	include/rapidjson/document.h	/^        struct U {$/;"	s	union:GenericValue::Number
UINT16_C	include/rapidjson/msinttypes/stdint.h	282;"	d
UINT16_C	include/rapidjson/msinttypes/stdint.h	59;"	d
UINT16_C	include/rapidjson/msinttypes/stdint.h	71;"	d
UINT16_MAX	include/rapidjson/msinttypes/stdint.h	187;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	283;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	60;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	72;"	d
UINT32_MAX	include/rapidjson/msinttypes/stdint.h	188;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	284;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	61;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	73;"	d
UINT64_MAX	include/rapidjson/msinttypes/stdint.h	189;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	281;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	58;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	70;"	d
UINT8_MAX	include/rapidjson/msinttypes/stdint.h	186;"	d
UINTMAX_C	include/rapidjson/msinttypes/stdint.h	293;"	d
UINTMAX_C	include/rapidjson/msinttypes/stdint.h	82;"	d
UINTMAX_MAX	include/rapidjson/msinttypes/stdint.h	233;"	d
UINTPTR_MAX	include/rapidjson/msinttypes/stdint.h	223;"	d
UINTPTR_MAX	include/rapidjson/msinttypes/stdint.h	227;"	d
UINT_FAST16_MAX	include/rapidjson/msinttypes/stdint.h	215;"	d
UINT_FAST32_MAX	include/rapidjson/msinttypes/stdint.h	216;"	d
UINT_FAST64_MAX	include/rapidjson/msinttypes/stdint.h	217;"	d
UINT_FAST8_MAX	include/rapidjson/msinttypes/stdint.h	214;"	d
UINT_LEAST16_MAX	include/rapidjson/msinttypes/stdint.h	201;"	d
UINT_LEAST32_MAX	include/rapidjson/msinttypes/stdint.h	202;"	d
UINT_LEAST64_MAX	include/rapidjson/msinttypes/stdint.h	203;"	d
UINT_LEAST8_MAX	include/rapidjson/msinttypes/stdint.h	200;"	d
UNUSED	pecFunction.h	6;"	d
UTF16	include/rapidjson/encodings.h	/^struct UTF16 {$/;"	s
UTF16BE	include/rapidjson/encodings.h	/^struct UTF16BE : UTF16<CharType> {$/;"	s
UTF16LE	include/rapidjson/encodings.h	/^struct UTF16LE : UTF16<CharType> {$/;"	s
UTF32	include/rapidjson/encodings.h	/^struct UTF32 {$/;"	s
UTF32BE	include/rapidjson/encodings.h	/^struct UTF32BE : UTF32<CharType> {$/;"	s
UTF32LE	include/rapidjson/encodings.h	/^struct UTF32LE : UTF32<CharType> {$/;"	s
UTF8	include/rapidjson/encodings.h	/^struct UTF8 {$/;"	s
UTFType	include/rapidjson/encodings.h	/^enum UTFType {$/;"	g
UTILS_H	include/utils.h	3;"	d
Uint	include/rapidjson/document.h	/^    bool Uint(unsigned i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint	include/rapidjson/prettywriter.h	/^    bool Uint(unsigned u)       { PrettyPrefix(kNumberType); return Base::WriteUint(u); }$/;"	f	class:PrettyWriter
Uint	include/rapidjson/reader.h	/^    bool Uint(unsigned) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint	include/rapidjson/writer.h	/^    bool Uint(unsigned u)       { Prefix(kNumberType); return WriteUint(u); }$/;"	f	class:Writer
Uint64	include/rapidjson/document.h	/^    bool Uint64(uint64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint64	include/rapidjson/prettywriter.h	/^    bool Uint64(uint64_t u64)   { PrettyPrefix(kNumberType); return Base::WriteUint64(u64);  }$/;"	f	class:PrettyWriter
Uint64	include/rapidjson/reader.h	/^    bool Uint64(uint64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint64	include/rapidjson/writer.h	/^    bool Uint64(uint64_t u64)   { Prefix(kNumberType); return WriteUint64(u64); }$/;"	f	class:Writer
Uint64Value	include/rapidjson/internal/ieee754.h	/^    uint64_t Uint64Value() const { return u_; }$/;"	f	class:internal::Double
UpdateK	cir.h	/^void UpdateK()$/;"	f
UpdateSW	cir.h	/^void UpdateSW()$/;"	f
Usable	include/rapidjson/document.h	/^        inline static bool Usable(SizeType len) { return            (MaxSize >= len); }$/;"	f	struct:GenericValue::ShortString
V	cir.h	/^double X[nX], V[nV], SW[nSW];$/;"	v
V0	cir.h	/^double X0[nX],V0[nV],SW0[nSW];$/;"	v
V2	cir.h	/^double X2[nX],V2[nV],SW2[nSW];$/;"	v
Validate	include/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:AutoUTF
Validate	include/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:ASCII
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF16
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF32
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF8
Value	include/rapidjson/document.h	/^typedef GenericValue<UTF8<> > Value;$/;"	t
Value	include/rapidjson/internal/ieee754.h	/^    double Value() const { return d_; }$/;"	f	class:internal::Double
Value	include/rapidjson/internal/meta.h	/^    enum { Value = (sizeof(Check(Host(), 0)) == sizeof(Yes)) };$/;"	e	enum:internal::IsBaseOfImpl::__anon11
Value	include/rapidjson/internal/meta.h	/^    static const bool Value = Cond;$/;"	m	struct:internal::BoolType
ValueIterator	include/rapidjson/document.h	/^    typedef GenericValue* ValueIterator;            \/\/!< Value iterator for iterating in array.$/;"	t	class:GenericValue
ValueType	include/rapidjson/document.h	/^    typedef GenericValue<Encoding, Allocator> ValueType;    \/\/!< Value type of itself.$/;"	t	class:GenericValue
ValueType	include/rapidjson/document.h	/^    typedef GenericValue<Encoding, Allocator> ValueType;    \/\/!< Value type of the document.$/;"	t	class:GenericDocument
ValueType	include/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericMemberIterator
Vcon	cir.h	/^int stage, Vcon, Denforce, condition,\/*=9,*\/ k;$/;"	v
Vg	cir.h	/^double Vg()$/;"	f
Vg1	cir.h	/^double Vg1;$/;"	v
Void	include/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	s	namespace:internal
Vout	cir.h	/^double Vout[31252];$/;"	v
WCHAR_MAX	include/rapidjson/msinttypes/stdint.h	261;"	d
WCHAR_MIN	include/rapidjson/msinttypes/stdint.h	258;"	d
WINT_MAX	include/rapidjson/msinttypes/stdint.h	265;"	d
WINT_MIN	include/rapidjson/msinttypes/stdint.h	264;"	d
WriteBool	include/rapidjson/writer.h	/^    bool WriteBool(bool b)  {$/;"	f	class:Writer
WriteDouble	include/rapidjson/writer.h	/^    bool WriteDouble(double d) {$/;"	f	class:Writer
WriteDouble	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteDouble(double d) {$/;"	f	class:Writer
WriteEndArray	include/rapidjson/writer.h	/^    bool WriteEndArray()    { os_->Put(']'); return true; }$/;"	f	class:Writer
WriteEndObject	include/rapidjson/writer.h	/^    bool WriteEndObject()   { os_->Put('}'); return true; }$/;"	f	class:Writer
WriteExponent	include/rapidjson/internal/dtoa.h	/^inline char* WriteExponent(int K, char* buffer) {$/;"	f	namespace:internal
WriteIndent	include/rapidjson/prettywriter.h	/^    void WriteIndent()  {$/;"	f	class:PrettyWriter
WriteInt	include/rapidjson/writer.h	/^    bool WriteInt(int i) {$/;"	f	class:Writer
WriteInt	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt(int i) {$/;"	f	class:Writer
WriteInt64	include/rapidjson/writer.h	/^    bool WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteInt64	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteNull	include/rapidjson/writer.h	/^    bool WriteNull()  {$/;"	f	class:Writer
WriteStartArray	include/rapidjson/writer.h	/^    bool WriteStartArray()  { os_->Put('['); return true; }$/;"	f	class:Writer
WriteStartObject	include/rapidjson/writer.h	/^    bool WriteStartObject() { os_->Put('{'); return true; }$/;"	f	class:Writer
WriteString	include/rapidjson/writer.h	/^    bool WriteString(const Ch* str, SizeType length)  {$/;"	f	class:Writer
WriteUint	include/rapidjson/writer.h	/^    bool WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint64	include/rapidjson/writer.h	/^    bool WriteUint64(uint64_t u64) {$/;"	f	class:Writer
WriteUint64	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint64(uint64_t u) {$/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^    Writer(OutputStream& os, StackAllocator* stackAllocator = 0, size_t levelDepth = kDefaultLevelDepth) : $/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^    Writer(StackAllocator* allocator = 0, size_t levelDepth = kDefaultLevelDepth) :$/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^class Writer {$/;"	c
X	cir.h	/^double X[nX], V[nV], SW[nSW];$/;"	v
X0	cir.h	/^double X0[nX],V0[nV],SW0[nSW];$/;"	v
X2	cir.h	/^double X2[nX],V2[nV],SW2[nSW];$/;"	v
Yes	include/rapidjson/internal/meta.h	/^    typedef char (&Yes)[1];$/;"	t	struct:internal::IsBaseOfImpl
Z16	include/rapidjson/reader.h	721;"	d
Z16	include/rapidjson/reader.h	729;"	d
Z16	include/rapidjson/writer.h	247;"	d
Z16	include/rapidjson/writer.h	255;"	d
_MSC_INTTYPES_H_	include/rapidjson/msinttypes/inttypes.h	42;"	d
_MSC_STDINT_H_	include/rapidjson/msinttypes/stdint.h	42;"	d
_W64	include/rapidjson/msinttypes/stdint.h	106;"	d
_W64	include/rapidjson/msinttypes/stdint.h	108;"	d
_objective	cir.h	/^double _objective(double x[],double y[])$/;"	f
a	include/rapidjson/document.h	/^        Array a;$/;"	m	union:GenericValue::Data
ackley_func	include/cec14_test_func.h	/^void ackley_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Ackley's  *\/$/;"	f
add	include/utils.h	/^		void add(double y){$/;"	f	class:Save
add	include/utils.h	/^		void add(int x,double y){$/;"	f	class:Save
addFunction	include/functions.h	/^		void addFunction(Function*f){$/;"	f	class:FunctionFactory
allocator_	include/rapidjson/document.h	/^    Allocator* allocator_;$/;"	m	class:GenericDocument
allocator_	include/rapidjson/internal/stack.h	/^    Allocator* allocator_;$/;"	m	class:internal::Stack
allocator_	include/rapidjson/pointer.h	/^    Allocator* allocator_;                  \/\/!< The current allocator. It is either user-supplied or equal to ownAllocator_.$/;"	m	class:GenericPointer
alpha	cir.h	98;"	d
asend	include/MPIHelper.h	/^		void asend(int buf,int dest,int tag=TAG3){$/;"	f	class:MPIHelper
asyfunc	include/cec14_test_func.h	/^void asyfunc (double *x, double *xasy, int nx, double beta)$/;"	f
baseAllocator_	include/rapidjson/allocators.h	/^    BaseAllocator* baseAllocator_;  \/\/!< base allocator for allocating memory chunks.$/;"	m	class:MemoryPoolAllocator
begin_	include/rapidjson/memorystream.h	/^    const Ch* begin_;   \/\/!< Original head of the string.$/;"	m	struct:MemoryStream
bent_cigar_func	include/cec14_test_func.h	/^void bent_cigar_func (double *x, double *f, int nx, double *Os,double *Mr, int s_flag, int r_flag) \/* Bent_Cigar *\/$/;"	f
bestI	include/BasicDE.h	/^		int bestI;$/;"	m	class:BasicDE
bestI	include/BasicDE.h	/^		int bestI;$/;"	m	class:BasicDE1
bi_rastrigin_func	include/cec14_test_func.h	/^void bi_rastrigin_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Lunacek Bi_rastrigin Function *\/$/;"	f
bufferEnd_	include/rapidjson/filewritestream.h	/^    char *bufferEnd_;$/;"	m	class:FileWriteStream
bufferLast_	include/rapidjson/filereadstream.h	/^    Ch *bufferLast_;$/;"	m	class:FileReadStream
bufferSize_	include/rapidjson/filereadstream.h	/^    size_t bufferSize_;$/;"	m	class:FileReadStream
buffer_	include/rapidjson/filereadstream.h	/^    Ch *buffer_;$/;"	m	class:FileReadStream
buffer_	include/rapidjson/filewritestream.h	/^    char *buffer_;$/;"	m	class:FileWriteStream
cIterativeParsingStateCount	include/rapidjson/reader.h	/^        cIterativeParsingStateCount$/;"	e	enum:GenericReader::IterativeParsingState
calStatistics	include/utils.h	/^void calStatistics(const vector<double>&arr,double &min,double &max,double &mean,double &std){$/;"	f
capacity	include/rapidjson/allocators.h	/^        size_t capacity;    \/\/!< Capacity of the chunk in bytes (excluding the header itself).$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
capacity	include/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::Array
capacity	include/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::Object
cec14_test_func	include/cec14_test_func.h	/^void cec14_test_func(double *x, double *f, int nx, int mx,int func_num)$/;"	f
cf01	include/cec14_test_func.h	/^void cf01 (double *x, double *f, int nx, double *Os,double *Mr,int r_flag) \/* Composition Function 1 *\/$/;"	f
cf02	include/cec14_test_func.h	/^void cf02 (double *x, double *f, int nx, double *Os,double *Mr,int r_flag) \/* Composition Function 2 *\/$/;"	f
cf03	include/cec14_test_func.h	/^void cf03 (double *x, double *f, int nx, double *Os,double *Mr,int r_flag) \/* Composition Function 3 *\/$/;"	f
cf04	include/cec14_test_func.h	/^void cf04 (double *x, double *f, int nx, double *Os,double *Mr,int r_flag) \/* Composition Function 4 *\/$/;"	f
cf05	include/cec14_test_func.h	/^void cf05 (double *x, double *f, int nx, double *Os,double *Mr,int r_flag) \/* Composition Function 4 *\/$/;"	f
cf06	include/cec14_test_func.h	/^void cf06 (double *x, double *f, int nx, double *Os,double *Mr,int r_flag) \/* Composition Function 6 *\/$/;"	f
cf07	include/cec14_test_func.h	/^void cf07 (double *x, double *f, int nx, double *Os,double *Mr,int *SS,int r_flag) \/* Composition Function 7 *\/$/;"	f
cf08	include/cec14_test_func.h	/^void cf08 (double *x, double *f, int nx, double *Os,double *Mr,int *SS,int r_flag) \/* Composition Function 8 *\/$/;"	f
cf_cal	include/cec14_test_func.h	/^void cf_cal(double *x, double *f, int nx, double *Os,double * delta,double * bias,double * fit, int cf_num)$/;"	f
chk_stage	cir.h	/^int chk_stage()$/;"	f
chunkHead_	include/rapidjson/allocators.h	/^    ChunkHeader *chunkHead_;    \/\/!< Head of the chunk linked-list. Only the head chunk serves allocation.$/;"	m	class:MemoryPoolAllocator
chunk_capacity_	include/rapidjson/allocators.h	/^    size_t chunk_capacity_;     \/\/!< The minimum capacity of chunk when they are allocated.$/;"	m	class:MemoryPoolAllocator
cir	cir.h	/^void cir()$/;"	f
code_	include/rapidjson/error/error.h	/^    ParseErrorCode code_;$/;"	m	struct:ParseResult
condition	cir.h	/^int stage, Vcon, Denforce, condition,\/*=9,*\/ k;$/;"	v
copyOptimization	include/rapidjson/rapidjson.h	/^    enum { copyOptimization = 0 };$/;"	e	enum:StreamTraits::__anon8
copyOptimization	include/rapidjson/rapidjson.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon10
copyOptimization	include/rapidjson/rapidjson.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon9
count_	include/rapidjson/filereadstream.h	/^    size_t count_;  \/\/!< Number of characters read$/;"	m	class:FileReadStream
count_	include/rapidjson/internal/biginteger.h	/^    size_t count_;$/;"	m	class:internal::BigInteger
counter	cir.h	/^int counter=0;$/;"	v
current_	include/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:AutoUTFInputStream
current_	include/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:EncodedInputStream
current_	include/rapidjson/filereadstream.h	/^    Ch *current_;$/;"	m	class:FileReadStream
current_	include/rapidjson/filewritestream.h	/^    char *current_;$/;"	m	class:FileWriteStream
d	include/rapidjson/document.h	/^        double d;$/;"	m	union:GenericValue::Number
d_	include/rapidjson/document.h	/^        GenericDocument& d_;$/;"	m	struct:GenericDocument::ClearStackOnExit
d_	include/rapidjson/internal/ieee754.h	/^        double d_;$/;"	m	union:internal::Double::__anon12
data_	include/rapidjson/document.h	/^    Data data_;$/;"	m	class:GenericValue
delta	cir.h	64;"	d
dif_powers_func	include/cec14_test_func.h	/^void dif_powers_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Different Powers *\/$/;"	f
digits_	include/rapidjson/internal/biginteger.h	/^    Type digits_[kCapacity];$/;"	m	class:internal::BigInteger
discus_func	include/cec14_test_func.h	/^void discus_func (double *x, double *f, int nx, double *Os,double *Mr, int s_flag, int r_flag) \/* Discus *\/$/;"	f
doInit	main.cpp	/^void doInit(){$/;"	f
do_stage	cir.h	/^void do_stage()$/;"	f
doc	include/settingParser.h	/^		Document doc;$/;"	m	class:SettingParser
drand	include/utils.h	/^double drand(){$/;"	f
drand	include/utils.h	/^double drand(double min,double max){$/;"	f
dst_	include/rapidjson/rapidjson.h	/^    Ch* dst_;$/;"	m	struct:GenericInsituStringStream
dtic	include/utils.h	/^		inline static double dtic(){$/;"	f	class:Tic
dtoa	include/rapidjson/internal/dtoa.h	/^inline char* dtoa(double value, char* buffer) {$/;"	f	namespace:internal
e	include/rapidjson/internal/diyfp.h	/^    int e;$/;"	m	struct:internal::DiyFp
elements	include/rapidjson/document.h	/^        GenericValue* elements;$/;"	m	struct:GenericValue::Array
ellips_func	include/cec14_test_func.h	/^void ellips_func (double *x, double *f, int nx, double *Os,double *Mr, int s_flag, int r_flag) \/* Ellipsoidal *\/$/;"	f
end_	include/rapidjson/memorystream.h	/^    const Ch* end_;     \/\/!< End of stream.$/;"	m	struct:MemoryStream
end_	include/rapidjson/pointer.h	/^        const Ch* end_;     \/\/!< Past-the-end position.$/;"	m	class:GenericPointer::PercentDecodeStream
endofcycle	cir.h	/^void endofcycle()$/;"	f
eof_	include/rapidjson/filereadstream.h	/^    bool eof_;$/;"	m	class:FileReadStream
escaffer6_func	include/cec14_test_func.h	/^void escaffer6_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Expanded Scaffer??s F6  *\/$/;"	f
evaluate	include/functions.h	/^		inline double evaluate(vector<double>&xs){$/;"	f	class:Function
evaluate	include/functions.h	/^		virtual double evaluate(double *xs){$/;"	f	class:Function
evaluate	include/functions.h	/^		virtual double evaluate(double *xs){$/;"	f	class:FunctionReverse
f	include/BasicDE.h	/^		Function *f;$/;"	m	class:BasicDE
f	include/BasicDE.h	/^		Function *f;$/;"	m	class:BasicDE1
f	include/rapidjson/internal/diyfp.h	/^    uint64_t f;$/;"	m	struct:internal::DiyFp
fbest	include/functions.h	/^		double fbest;$/;"	m	class:Function
feCounter	include/functions.h	/^		int feCounter;$/;"	m	class:Function
feedback	cir.h	/^void feedback()$/;"	f
ff	include/functions.h	/^	Function *ff;$/;"	m	class:FunctionReverse
file	include/settingParser.h	/^		char file[256];$/;"	m	class:SettingParser
findSWinstant	cir.h	/^double findSWinstant(int SWp, double ref)$/;"	f
findend	cir.h	/^void findend()$/;"	f
findramp	cir.h	/^double findramp(int Vp, double gnd)$/;"	f
flags_	include/rapidjson/document.h	/^    GenericValue() RAPIDJSON_NOEXCEPT : data_(), flags_(kNullFlag) {}$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    GenericValue(GenericValue&& rhs) RAPIDJSON_NOEXCEPT : data_(rhs.data_), flags_(rhs.flags_) {$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length) RAPIDJSON_NOEXCEPT : data_(), flags_() { SetStringRaw(StringRef(s, length)); }$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    explicit GenericValue(StringRefType s) RAPIDJSON_NOEXCEPT : data_(), flags_() { SetStringRaw(s); }$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    explicit GenericValue(Type type) RAPIDJSON_NOEXCEPT : data_(), flags_() {$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    explicit GenericValue(double d) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberDoubleFlag) { data_.n.d = d; }$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    explicit GenericValue(int i) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberIntFlag) {$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    explicit GenericValue(int64_t i64) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberInt64Flag) {$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    explicit GenericValue(uint64_t u64) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberUint64Flag) {$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    explicit GenericValue(unsigned u) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberUintFlag) {$/;"	f	class:GenericValue
flags_	include/rapidjson/document.h	/^    unsigned flags_;$/;"	m	class:GenericValue
fp_	include/rapidjson/filereadstream.h	/^    std::FILE* fp_;$/;"	m	class:FileReadStream
fp_	include/rapidjson/filewritestream.h	/^    std::FILE* fp_;$/;"	m	class:FileWriteStream
fs	include/functions.h	/^		vector<Function*>fs;$/;"	m	class:FunctionFactory
func_flag	include/cec14_test_func.h	/^int ini_flag,n_flag,func_flag,*SS;$/;"	v
fx	include/BasicDE.h	/^		vector<double>fx;$/;"	m	class:BasicDE
fx	include/BasicDE.h	/^		vector<double>fx;$/;"	m	class:BasicDE1
g_argc	main.cpp	/^int *g_argc;$/;"	v
g_argv	main.cpp	/^char ***g_argv;$/;"	v
gaussrand	include/utils.h	/^double gaussrand()$/;"	f
generate	include/utils.h	/^		void generate(){$/;"	f	class:RandomPermutation
generateSplitTask	test.cpp	/^void generateSplitTask(int numTask,int numProcesses,vector<int>&task){$/;"	f
getAuthorInfo	include/settingParser.h	/^		void getAuthorInfo(const char *name,char *info){$/;"	f	class:SettingParser
getBestFx	include/BasicDE.h	/^		double getBestFx()const{$/;"	f	class:BasicDE
getBestFx	include/BasicDE.h	/^		double getBestFx()const{$/;"	f	class:BasicDE1
getBiVector	include/settingParser.h	/^		void getBiVector(const char *name,vector<vector<double> >&arr)const{$/;"	f	class:SettingParser
getBiVector	include/settingParser.h	/^		void getBiVector(const char *name,vector<vector<int> >&arr)const{$/;"	f	class:SettingParser
getDouble	include/settingParser.h	/^		double getDouble(const char *name)const{$/;"	f	class:SettingParser
getFBest	include/functions.h	/^		double getFBest()const{return fbest;}$/;"	f	class:Function
getFECounter	include/functions.h	/^		int getFECounter()const{return feCounter;}$/;"	f	class:Function
getFunction	include/functions.h	/^		Function*getFunction(int index)const{$/;"	f	class:FunctionFactory
getID	include/MPIHelper.h	/^		int getID()const{return id;}$/;"	f	class:MPIHelper
getInt	include/settingParser.h	/^		int getInt(const char *name)const{$/;"	f	class:SettingParser
getMax	include/functions.h	/^		double getMax(Function *f,int MaxFEs,vector<double>&x,double &fx){$/;"	f	class:EA
getMin	include/BasicDE.h	/^		virtual double getMin(Function *f,int MaxFEs,vector<double>&out_x,double &out_fx){$/;"	f	class:BasicDE
getMin	include/BasicDE.h	/^		virtual double getMin(Function *f,int MaxFEs,vector<double>&out_x,double &out_fx){$/;"	f	class:BasicDE1
getName	include/MPIHelper.h	/^		const char *getName()const{$/;"	f	class:MPIHelper
getName	include/functions.h	/^		const char *getName()const{return name;}$/;"	f	class:Function
getName	include/functions.h	/^		virtual const char *getName()const{$/;"	f	class:EA
getName	include/settingParser.h	/^		const char *getName()const{$/;"	f	class:SettingParser
getNumDim	include/functions.h	/^		int getNumDim()const{return numDim;}$/;"	f	class:Function
getNumFunction	include/functions.h	/^		int getNumFunction()const{$/;"	f	class:FunctionFactory
getNumProcesses	include/MPIHelper.h	/^		int getNumProcesses()const{return numProcess;}$/;"	f	class:MPIHelper
getRange	include/functions.h	/^		double getRange(int botOrUp){$/;"	f	class:Function
getString	include/settingParser.h	/^		const char *getString(const char *name)const{$/;"	f	class:SettingParser
getString	include/settingParser.h	/^		void getString(const char *name,char *dest)const {$/;"	f	class:SettingParser
getTimeMs	include/utils.h	/^		inline static long getTimeMs(){$/;"	f	class:Tic
getVector	include/settingParser.h	/^		void getVector(const char *name,vector<double>&arr)const{$/;"	f	class:SettingParser
getVector	include/settingParser.h	/^		void getVector(const char *name,vector<int>&arr)const{$/;"	f	class:SettingParser
grie_rosen_func	include/cec14_test_func.h	/^void grie_rosen_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Griewank-Rosenbrock  *\/$/;"	f
griewank_func	include/cec14_test_func.h	/^void griewank_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Griewank's  *\/$/;"	f
h1	cir.h	57;"	d
h2	cir.h	58;"	d
h3	cir.h	59;"	d
happycat_func	include/cec14_test_func.h	/^void happycat_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* HappyCat, provdided by Hans-Georg Beyer (HGB) *\/$/;"	f
hasBOM_	include/rapidjson/encodedstream.h	/^    bool hasBOM_;$/;"	m	class:AutoUTFInputStream
hasRoot_	include/rapidjson/writer.h	/^    bool hasRoot_;$/;"	m	class:Writer
hashcode	include/rapidjson/document.h	/^        unsigned hashcode;  \/\/!< reserved$/;"	m	struct:GenericValue::String
head_	include/rapidjson/pointer.h	/^        const Ch* head_;    \/\/!< Original head of the string.$/;"	m	class:GenericPointer::PercentDecodeStream
head_	include/rapidjson/rapidjson.h	/^    Ch* head_;$/;"	m	struct:GenericInsituStringStream
head_	include/rapidjson/rapidjson.h	/^    const Ch* head_;    \/\/!< Original head of the string.$/;"	m	struct:GenericStringStream
hf01	include/cec14_test_func.h	/^void hf01 (double *x, double *f, int nx, double *Os,double *Mr,int *S,int s_flag,int r_flag) \/* Hybrid Function 1 *\/$/;"	f
hf02	include/cec14_test_func.h	/^void hf02 (double *x, double *f, int nx, double *Os,double *Mr,int *S,int s_flag,int r_flag) \/* Hybrid Function 2 *\/$/;"	f
hf03	include/cec14_test_func.h	/^void hf03 (double *x, double *f, int nx, double *Os,double *Mr,int *S,int s_flag,int r_flag) \/* Hybrid Function 3 *\/$/;"	f
hf04	include/cec14_test_func.h	/^void hf04 (double *x, double *f, int nx, double *Os,double *Mr,int *S,int s_flag,int r_flag) \/* Hybrid Function 4 *\/$/;"	f
hf05	include/cec14_test_func.h	/^void hf05 (double *x, double *f, int nx, double *Os,double *Mr,int *S,int s_flag,int r_flag) \/* Hybrid Function 5 *\/$/;"	f
hf06	include/cec14_test_func.h	/^void hf06 (double *x, double *f, int nx, double *Os,double *Mr,int *S,int s_flag,int r_flag) \/* Hybrid Function 6 *\/$/;"	f
hgbat_func	include/cec14_test_func.h	/^void hgbat_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* HGBat, provdided by Hans-Georg Beyer (HGB)*\/$/;"	f
i	include/rapidjson/document.h	/^            int i;$/;"	m	struct:GenericValue::Number::I
i	include/rapidjson/document.h	/^        }i;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::I
i	include/utils.h	/^	int i;$/;"	m	class:RandomPermutation
i32toa	include/rapidjson/internal/itoa.h	/^inline char* i32toa(int32_t value, char* buffer) {$/;"	f	namespace:internal
i64	include/rapidjson/document.h	/^        int64_t i64;$/;"	m	union:GenericValue::Number
i64toa	include/rapidjson/internal/itoa.h	/^inline char* i64toa(int64_t value, char* buffer) {$/;"	f	namespace:internal
id	include/MPIHelper.h	/^	int id;$/;"	m	class:MPIHelper
imaxabs	include/rapidjson/msinttypes/inttypes.h	279;"	d
imaxdiv	include/rapidjson/msinttypes/inttypes.h	/^imaxdiv_t __cdecl imaxdiv(intmax_t numer, intmax_t denom)$/;"	f
imaxdiv_t	include/rapidjson/msinttypes/inttypes.h	/^} imaxdiv_t;$/;"	t	typeref:struct:__anon6
imgUpdateSW	cir.h	/^void imgUpdateSW()$/;"	f
inArray	include/rapidjson/writer.h	/^        bool inArray;       \/\/!< true if in array, otherwise in object$/;"	m	struct:Writer::Level
indentCharCount_	include/rapidjson/prettywriter.h	/^    unsigned indentCharCount_;$/;"	m	class:PrettyWriter
indentChar_	include/rapidjson/prettywriter.h	/^    Ch indentChar_;$/;"	m	class:PrettyWriter
index	include/rapidjson/pointer.h	/^        SizeType index;             \/\/!< A valid array index, if it is not equal to kPointerInvalidIndex.$/;"	m	struct:GenericPointer::Token
ini_flag	include/cec14_test_func.h	/^int ini_flag,n_flag,func_flag,*SS;$/;"	v
init	include/MPIHelper.h	/^		void init(int &argc,char ** &argv){$/;"	f	class:MPIHelper
init	include/functions.h	/^		virtual void init(int numDim){$/;"	f	class:FunctionFactory
init	include/functions.h	/^		virtual void init(int numDim){$/;"	f	class:FunctionFactoryMy
init	include/utils.h	/^		void init(const char *title){$/;"	f	class:Save
initParam	include/BasicDE.h	/^		virtual void initParam(SearchParam *param){$/;"	f	class:BasicDE
initParam	include/BasicDE.h	/^		void initParam(SearchParam *param){$/;"	f	class:BasicDE1
init_parameters	cir.h	/^void init_parameters()$/;"	f
initialCapacity_	include/rapidjson/internal/stack.h	/^    size_t initialCapacity_;$/;"	m	class:internal::Stack
instance	include/functions.h	/^		static FunctionFactory*instance;$/;"	m	class:FunctionFactory
instance	include/functions.h	/^FunctionFactory*FunctionFactory::instance=0;$/;"	m	class:FunctionFactory
int16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int64_t	include/rapidjson/msinttypes/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed char       int8_t;$/;"	t
int_fast16_t	include/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	include/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	include/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	include/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	include/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	include/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
internal	include/rapidjson/document.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/biginteger.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/diyfp.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/dtoa.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/ieee754.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/itoa.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/meta.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/pow10.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/stack.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/strfunc.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/strtod.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/swap.h	/^namespace internal {$/;"	n
internal	include/rapidjson/reader.h	/^namespace internal {$/;"	n
intmax_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
is	include/rapidjson/reader.h	/^        InputStream& is;$/;"	m	class:GenericReader::NumberStream
isMaster	include/MPIHelper.h	/^		bool isMaster()const{return id==0;}$/;"	f	class:MPIHelper
is_	include/rapidjson/encodedstream.h	/^    InputByteStream& is_;$/;"	m	class:EncodedInputStream
is_	include/rapidjson/encodedstream.h	/^    InputByteStream* is_;$/;"	m	class:AutoUTFInputStream
ix	include/utils.h	/^			int ix;$/;"	m	class:Save
k	cir.h	/^int stage, Vcon, Denforce, condition,\/*=9,*\/ k;$/;"	v
kArrayFlag	include/rapidjson/document.h	/^        kArrayFlag = kArrayType,$/;"	e	enum:GenericValue::__anon13
kArrayType	include/rapidjson/rapidjson.h	/^    kArrayType = 4,     \/\/!< array $/;"	e	enum:Type
kBitCount	include/rapidjson/internal/biginteger.h	/^    static const size_t kBitCount = 3328;  \/\/ 64bit * 54 > 10^1000$/;"	m	class:internal::BigInteger
kBoolFlag	include/rapidjson/document.h	/^        kBoolFlag = 0x100,$/;"	e	enum:GenericValue::__anon13
kCapacity	include/rapidjson/internal/biginteger.h	/^    static const size_t kCapacity = kBitCount \/ sizeof(Type);$/;"	m	class:internal::BigInteger
kConstStringFlag	include/rapidjson/document.h	/^        kConstStringFlag = kStringType | kStringFlag,$/;"	e	enum:GenericValue::__anon13
kCopyFlag	include/rapidjson/document.h	/^        kCopyFlag = 0x200000,$/;"	e	enum:GenericValue::__anon13
kCopyStringFlag	include/rapidjson/document.h	/^        kCopyStringFlag = kStringType | kStringFlag | kCopyFlag,$/;"	e	enum:GenericValue::__anon13
kDefaultArrayCapacity	include/rapidjson/document.h	/^    static const SizeType kDefaultArrayCapacity = 16;$/;"	m	class:GenericValue
kDefaultCapacity	include/rapidjson/memorybuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	struct:GenericMemoryBuffer
kDefaultCapacity	include/rapidjson/stringbuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	class:GenericStringBuffer
kDefaultChunkCapacity	include/rapidjson/allocators.h	/^    static const int kDefaultChunkCapacity = 64 * 1024; \/\/!< Default chunk capacity.$/;"	m	class:MemoryPoolAllocator
kDefaultLevelDepth	include/rapidjson/writer.h	/^    static const size_t kDefaultLevelDepth = 32;$/;"	m	class:Writer
kDefaultObjectCapacity	include/rapidjson/document.h	/^    static const SizeType kDefaultObjectCapacity = 16;$/;"	m	class:GenericValue
kDefaultStackCapacity	include/rapidjson/document.h	/^    static const size_t kDefaultStackCapacity = 1024;$/;"	m	class:GenericDocument
kDefaultStackCapacity	include/rapidjson/reader.h	/^    static const size_t kDefaultStackCapacity = 256;    \/\/!< Default stack capacity in bytes for storing a single decoded string.$/;"	m	class:GenericReader
kDenormalExponent	include/rapidjson/internal/ieee754.h	/^    static const int kDenormalExponent = 1 - kExponentBias;$/;"	m	class:internal::Double
kDiySignificandSize	include/rapidjson/internal/diyfp.h	/^    static const int kDiySignificandSize = 64;$/;"	m	struct:internal::DiyFp
kDoubleFlag	include/rapidjson/document.h	/^        kDoubleFlag = 0x4000,$/;"	e	enum:GenericValue::__anon13
kDpDenormalExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpDenormalExponent = -kDpExponentBias + 1;$/;"	m	struct:internal::DiyFp
kDpExponentBias	include/rapidjson/internal/diyfp.h	/^    static const int kDpExponentBias = 0x3FF + kDpSignificandSize;$/;"	m	struct:internal::DiyFp
kDpExponentMask	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpHiddenBit	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpMaxExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpMaxExponent = 0x7FF - kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpMinExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpMinExponent = -kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpSignificandMask	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	struct:internal::DiyFp
kDpSignificandSize	include/rapidjson/internal/diyfp.h	/^    static const int kDpSignificandSize = 52;$/;"	m	struct:internal::DiyFp
kExponentBias	include/rapidjson/internal/ieee754.h	/^    static const int kExponentBias = 0x3FF;$/;"	m	class:internal::Double
kExponentMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	class:internal::Double
kFalseFlag	include/rapidjson/document.h	/^        kFalseFlag = kFalseType | kBoolFlag,$/;"	e	enum:GenericValue::__anon13
kFalseType	include/rapidjson/rapidjson.h	/^    kFalseType = 1,     \/\/!< false$/;"	e	enum:Type
kHiddenBit	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	class:internal::Double
kInlineStrFlag	include/rapidjson/document.h	/^        kInlineStrFlag = 0x400000,$/;"	e	enum:GenericValue::__anon13
kInt64Flag	include/rapidjson/document.h	/^        kInt64Flag = 0x1000,$/;"	e	enum:GenericValue::__anon13
kIntFlag	include/rapidjson/document.h	/^        kIntFlag = 0x400,$/;"	e	enum:GenericValue::__anon13
kNeedFree	include/rapidjson/allocators.h	/^    static const bool kNeedFree = false;    \/\/!< Tell users that no need to call Free() with this allocator. (concept Allocator)$/;"	m	class:MemoryPoolAllocator
kNeedFree	include/rapidjson/allocators.h	/^    static const bool kNeedFree = true;$/;"	m	class:CrtAllocator
kNullFlag	include/rapidjson/document.h	/^        kNullFlag = kNullType,$/;"	e	enum:GenericValue::__anon13
kNullType	include/rapidjson/rapidjson.h	/^    kNullType = 0,      \/\/!< null$/;"	e	enum:Type
kNumberAnyFlag	include/rapidjson/document.h	/^        kNumberAnyFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag | kUintFlag | kUint64Flag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon13
kNumberDoubleFlag	include/rapidjson/document.h	/^        kNumberDoubleFlag = kNumberType | kNumberFlag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon13
kNumberFlag	include/rapidjson/document.h	/^        kNumberFlag = 0x200,$/;"	e	enum:GenericValue::__anon13
kNumberInt64Flag	include/rapidjson/document.h	/^        kNumberInt64Flag = kNumberType | kNumberFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon13
kNumberIntFlag	include/rapidjson/document.h	/^        kNumberIntFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon13
kNumberType	include/rapidjson/rapidjson.h	/^    kNumberType = 6     \/\/!< number$/;"	e	enum:Type
kNumberUint64Flag	include/rapidjson/document.h	/^        kNumberUint64Flag = kNumberType | kNumberFlag | kUint64Flag,$/;"	e	enum:GenericValue::__anon13
kNumberUintFlag	include/rapidjson/document.h	/^        kNumberUintFlag = kNumberType | kNumberFlag | kUintFlag | kUint64Flag | kInt64Flag,$/;"	e	enum:GenericValue::__anon13
kObjectFlag	include/rapidjson/document.h	/^        kObjectFlag = kObjectType,$/;"	e	enum:GenericValue::__anon13
kObjectType	include/rapidjson/rapidjson.h	/^    kObjectType = 3,    \/\/!< object$/;"	e	enum:Type
kParseCommentsFlag	include/rapidjson/reader.h	/^    kParseCommentsFlag = 32,        \/\/!< Allow one-line (\/\/) and multi-line (\/**\/) comments.$/;"	e	enum:ParseFlag
kParseDefaultFlags	include/rapidjson/reader.h	/^    kParseDefaultFlags = RAPIDJSON_PARSE_DEFAULT_FLAGS  \/\/!< Default parse flags. Can be customized by defining RAPIDJSON_PARSE_DEFAULT_FLAGS$/;"	e	enum:ParseFlag
kParseErrorArrayMissCommaOrSquareBracket	include/rapidjson/error/error.h	/^    kParseErrorArrayMissCommaOrSquareBracket,   \/\/!< Missing a comma or ']' after an array element.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentEmpty	include/rapidjson/error/error.h	/^    kParseErrorDocumentEmpty,                   \/\/!< The document is empty.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentRootNotSingular	include/rapidjson/error/error.h	/^    kParseErrorDocumentRootNotSingular,         \/\/!< The document root must not follow by other values.$/;"	e	enum:ParseErrorCode
kParseErrorNone	include/rapidjson/error/error.h	/^    kParseErrorNone = 0,                        \/\/!< No error.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissExponent	include/rapidjson/error/error.h	/^    kParseErrorNumberMissExponent,              \/\/!< Miss exponent in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissFraction	include/rapidjson/error/error.h	/^    kParseErrorNumberMissFraction,              \/\/!< Miss fraction part in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberTooBig	include/rapidjson/error/error.h	/^    kParseErrorNumberTooBig,                    \/\/!< Number too big to be stored in double.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissColon	include/rapidjson/error/error.h	/^    kParseErrorObjectMissColon,                 \/\/!< Missing a colon after a name of object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissCommaOrCurlyBracket	include/rapidjson/error/error.h	/^    kParseErrorObjectMissCommaOrCurlyBracket,   \/\/!< Missing a comma or '}' after an object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissName	include/rapidjson/error/error.h	/^    kParseErrorObjectMissName,                  \/\/!< Missing a name for object member.$/;"	e	enum:ParseErrorCode
kParseErrorStringEscapeInvalid	include/rapidjson/error/error.h	/^    kParseErrorStringEscapeInvalid,             \/\/!< Invalid escape character in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringInvalidEncoding	include/rapidjson/error/error.h	/^    kParseErrorStringInvalidEncoding,           \/\/!< Invalid encoding in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringMissQuotationMark	include/rapidjson/error/error.h	/^    kParseErrorStringMissQuotationMark,         \/\/!< Missing a closing quotation mark in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeEscapeInvalidHex	include/rapidjson/error/error.h	/^    kParseErrorStringUnicodeEscapeInvalidHex,   \/\/!< Incorrect hex digit after \\\\u escape in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeSurrogateInvalid	include/rapidjson/error/error.h	/^    kParseErrorStringUnicodeSurrogateInvalid,   \/\/!< The surrogate pair in string is invalid.$/;"	e	enum:ParseErrorCode
kParseErrorTermination	include/rapidjson/error/error.h	/^    kParseErrorTermination,                     \/\/!< Parsing was terminated.$/;"	e	enum:ParseErrorCode
kParseErrorUnspecificSyntaxError	include/rapidjson/error/error.h	/^    kParseErrorUnspecificSyntaxError            \/\/!< Unspecific syntax error.$/;"	e	enum:ParseErrorCode
kParseErrorValueInvalid	include/rapidjson/error/error.h	/^    kParseErrorValueInvalid,                    \/\/!< Invalid value.$/;"	e	enum:ParseErrorCode
kParseFullPrecisionFlag	include/rapidjson/reader.h	/^    kParseFullPrecisionFlag = 16,   \/\/!< Parse number in full precision (but slower).$/;"	e	enum:ParseFlag
kParseInsituFlag	include/rapidjson/reader.h	/^    kParseInsituFlag = 1,           \/\/!< In-situ(destructive) parsing.$/;"	e	enum:ParseFlag
kParseIterativeFlag	include/rapidjson/reader.h	/^    kParseIterativeFlag = 4,        \/\/!< Iterative(constant complexity in terms of function call stack size) parsing.$/;"	e	enum:ParseFlag
kParseNoFlags	include/rapidjson/reader.h	/^    kParseNoFlags = 0,              \/\/!< No flags are set.$/;"	e	enum:ParseFlag
kParseStopWhenDoneFlag	include/rapidjson/reader.h	/^    kParseStopWhenDoneFlag = 8,     \/\/!< After parsing a complete JSON root from stream, stop further processing the rest of stream. When this flag is used, parser will not generate kParseErrorDocumentRootNotSingular error.$/;"	e	enum:ParseFlag
kParseValidateEncodingFlag	include/rapidjson/reader.h	/^    kParseValidateEncodingFlag = 2, \/\/!< Validate encoding of JSON strings.$/;"	e	enum:ParseFlag
kPointerInvalidIndex	include/rapidjson/pointer.h	/^static const SizeType kPointerInvalidIndex = ~SizeType(0);  \/\/!< Represents an invalid index in GenericPointer::Token$/;"	v
kPointerParseErrorCharacterMustPercentEncode	include/rapidjson/pointer.h	/^    kPointerParseErrorCharacterMustPercentEncode    \/\/!< A character must percent encoded in URI fragment$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorInvalidEscape	include/rapidjson/pointer.h	/^    kPointerParseErrorInvalidEscape,                \/\/!< Invalid escape$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorInvalidPercentEncoding	include/rapidjson/pointer.h	/^    kPointerParseErrorInvalidPercentEncoding,       \/\/!< Invalid percent encoding in URI fragment$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorNone	include/rapidjson/pointer.h	/^    kPointerParseErrorNone = 0,                     \/\/!< The parse is successful$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorTokenMustBeginWithSolidus	include/rapidjson/pointer.h	/^    kPointerParseErrorTokenMustBeginWithSolidus,    \/\/!< A token must begin with a '\/'$/;"	e	enum:PointerParseErrorCode
kShortStringFlag	include/rapidjson/document.h	/^        kShortStringFlag = kStringType | kStringFlag | kCopyFlag | kInlineStrFlag,$/;"	e	enum:GenericValue::__anon13
kSignMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignMask = RAPIDJSON_UINT64_C2(0x80000000, 0x00000000);$/;"	m	class:internal::Double
kSignificandMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	class:internal::Double
kSignificandSize	include/rapidjson/internal/ieee754.h	/^    static const int kSignificandSize = 52;$/;"	m	class:internal::Double
kStringFlag	include/rapidjson/document.h	/^        kStringFlag = 0x100000,$/;"	e	enum:GenericValue::__anon13
kStringType	include/rapidjson/rapidjson.h	/^    kStringType = 5,    \/\/!< string$/;"	e	enum:Type
kTokenCount	include/rapidjson/reader.h	/^        kTokenCount$/;"	e	enum:GenericReader::Token
kTrueFlag	include/rapidjson/document.h	/^        kTrueFlag = kTrueType | kBoolFlag,$/;"	e	enum:GenericValue::__anon13
kTrueType	include/rapidjson/rapidjson.h	/^    kTrueType = 2,      \/\/!< true$/;"	e	enum:Type
kTypeBit	include/rapidjson/internal/biginteger.h	/^    static const size_t kTypeBit = sizeof(Type) * 8;$/;"	m	class:internal::BigInteger
kTypeMask	include/rapidjson/document.h	/^        kTypeMask = 0xFF    \/\/ bitwise-and with mask of 0xFF can be optimized by compiler$/;"	e	enum:GenericValue::__anon13
kUTF16BE	include/rapidjson/encodings.h	/^    kUTF16BE = 2,   \/\/!< UTF-16 big endian.$/;"	e	enum:UTFType
kUTF16LE	include/rapidjson/encodings.h	/^    kUTF16LE = 1,   \/\/!< UTF-16 little endian.$/;"	e	enum:UTFType
kUTF32BE	include/rapidjson/encodings.h	/^    kUTF32BE = 4    \/\/!< UTF-32 big endian.$/;"	e	enum:UTFType
kUTF32LE	include/rapidjson/encodings.h	/^    kUTF32LE = 3,   \/\/!< UTF-32 little endian.$/;"	e	enum:UTFType
kUTF8	include/rapidjson/encodings.h	/^    kUTF8 = 0,      \/\/!< UTF-8.$/;"	e	enum:UTFType
kUint64Flag	include/rapidjson/document.h	/^        kUint64Flag = 0x2000,$/;"	e	enum:GenericValue::__anon13
kUintFlag	include/rapidjson/document.h	/^        kUintFlag = 0x800,$/;"	e	enum:GenericValue::__anon13
katsuura_func	include/cec14_test_func.h	/^void katsuura_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Katsuura  *\/$/;"	f
lastTime	include/utils.h	/^		static long lastTime;$/;"	m	class:Tic
lastTime	include/utils.h	/^long Tic::lastTime=0;$/;"	m	class:Tic
length	include/rapidjson/document.h	/^        SizeType length;$/;"	m	struct:GenericValue::String
length	include/rapidjson/document.h	/^    const SizeType length; \/\/!< length of the string (excluding the trailing NULL terminator)$/;"	m	struct:GenericStringRef
length	include/rapidjson/pointer.h	/^        SizeType length;            \/\/!< Length of the name.$/;"	m	struct:GenericPointer::Token
length_	include/rapidjson/reader.h	/^        SizeType length_;$/;"	m	class:GenericReader::StackStream
level_stack_	include/rapidjson/writer.h	/^    internal::Stack<StackAllocator> level_stack_;$/;"	m	class:Writer
main	main.cpp	/^int main(int argc, char *argv[]){$/;"	f
main	test.cpp	/^int main(){$/;"	f
members	include/rapidjson/document.h	/^        Member* members;$/;"	m	struct:GenericValue::Object
mf	cir.h	65;"	d
mtic	include/utils.h	/^		static long mtic(){$/;"	f	class:Tic
mul	include/functions.h	/^	double mul=1.0;$/;"	v
mulcos	include/functions.h	/^	double mulcos=1.0;$/;"	v
myfun	cir.h	/^double myfun(double x[])$/;"	f
n	include/rapidjson/document.h	/^        Number n;$/;"	m	union:GenericValue::Data
n	include/utils.h	/^	int n;$/;"	m	class:RandomPermutation
nSW	cir.h	63;"	d
nV	cir.h	62;"	d
nX	cir.h	61;"	d
n_flag	include/cec14_test_func.h	/^int ini_flag,n_flag,func_flag,*SS;$/;"	v
name	include/MPIHelper.h	/^	char name[100];$/;"	m	class:MPIHelper
name	include/MPIHelper.h	/^	char name[MPI_MAX_PROCESSOR_NAME];$/;"	m	class:MPIHelper
name	include/functions.h	/^		char name[50];$/;"	m	class:Function
name	include/functions.h	/^	char name[100];$/;"	m	class:EA
name	include/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> name;     \/\/!< name of member (must be a string)$/;"	m	struct:GenericMember
name	include/rapidjson/pointer.h	/^        const Ch* name;             \/\/!< Name of the token. It has null character at the end but it can contain null character.$/;"	m	struct:GenericPointer::Token
nameBuffer_	include/rapidjson/pointer.h	/^    Ch* nameBuffer_;                        \/\/!< A buffer containing all names in tokens.$/;"	m	class:GenericPointer
newID	include/IDHelper.h	/^		static int newID(const char *file=0){$/;"	f	class:IDHelper
next	include/rapidjson/allocators.h	/^        ChunkHeader *next;  \/\/!< Next chunk in the linked list.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
next	include/utils.h	/^		int next(){$/;"	f	class:RandomPermutation
numDim	include/BasicDE.h	/^		int numDim;$/;"	m	class:BasicDE
numDim	include/BasicDE.h	/^		int numDim;$/;"	m	class:BasicDE1
numDim	include/functions.h	/^		int numDim;$/;"	m	class:Function
numProcess	include/MPIHelper.h	/^	int numProcess;$/;"	m	class:MPIHelper
o	include/rapidjson/document.h	/^        Object o;$/;"	m	union:GenericValue::Data
offset_	include/rapidjson/error/error.h	/^    size_t offset_;$/;"	m	struct:ParseResult
operator !=	include/rapidjson/document.h	/^    bool operator!=(ConstIterator that) const { return ptr_ != that.ptr_; }$/;"	f	class:GenericMemberIterator
operator !=	include/rapidjson/document.h	/^    bool operator!=(const Ch* rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    bool operator!=(const GenericValue<Encoding, SourceAllocator>& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& lhs, const GenericValue& rhs) { return !(rhs == lhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/pointer.h	/^    bool operator!=(const GenericPointer& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericPointer
operator *	include/rapidjson/document.h	/^    Reference operator*() const { return *ptr_; }$/;"	f	class:GenericMemberIterator
operator *	include/rapidjson/internal/diyfp.h	/^    DiyFp operator*(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator *=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint32_t u) {$/;"	f	class:internal::BigInteger
operator *=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator +	include/rapidjson/document.h	/^    Iterator operator+(DifferenceType n) const { return Iterator(ptr_+n); }$/;"	f	class:GenericMemberIterator
operator ++	include/rapidjson/document.h	/^    Iterator  operator++(int){ Iterator old(*this); ++ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator ++	include/rapidjson/document.h	/^    Iterator& operator++(){ ++ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	include/rapidjson/document.h	/^    Iterator& operator+=(DifferenceType n) { ptr_+=n; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator+=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator -	include/rapidjson/document.h	/^    DifferenceType operator-(ConstIterator that) const { return ptr_-that.ptr_; }$/;"	f	class:GenericMemberIterator
operator -	include/rapidjson/document.h	/^    Iterator operator-(DifferenceType n) const { return Iterator(ptr_-n); }$/;"	f	class:GenericMemberIterator
operator -	include/rapidjson/internal/diyfp.h	/^    DiyFp operator-(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator --	include/rapidjson/document.h	/^    Iterator  operator--(int){ Iterator old(*this); --ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator --	include/rapidjson/document.h	/^    Iterator& operator--(){ --ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator -=	include/rapidjson/document.h	/^    Iterator& operator-=(DifferenceType n) { ptr_-=n; return *this; }$/;"	f	class:GenericMemberIterator
operator ->	include/rapidjson/document.h	/^    Pointer   operator->() const { return ptr_; }$/;"	f	class:GenericMemberIterator
operator <	include/rapidjson/document.h	/^    bool operator< (ConstIterator that) const { return ptr_ < that.ptr_; }$/;"	f	class:GenericMemberIterator
operator <<=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator<<=(size_t shift) {$/;"	f	class:internal::BigInteger
operator <=	include/rapidjson/document.h	/^    bool operator<=(ConstIterator that) const { return ptr_ <= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator =	include/rapidjson/document.h	/^    operator=(T value) {$/;"	f	class:GenericValue
operator =	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator=(const BigInteger &rhs)$/;"	f	class:internal::BigInteger
operator =	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator =	include/rapidjson/internal/stack.h	/^    Stack& operator=(Stack&& rhs) {$/;"	f	class:internal::Stack
operator =	include/rapidjson/pointer.h	/^    GenericPointer& operator=(const GenericPointer& rhs) {$/;"	f	class:GenericPointer
operator =	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer& operator=(GenericStringBuffer&& rhs) {$/;"	f	class:GenericStringBuffer
operator =	include/settingParser.h	/^		SettingParser&operator=(SettingParser&p){$/;"	f	class:SettingParser
operator ==	include/rapidjson/document.h	/^    bool operator==(ConstIterator that) const { return ptr_ == that.ptr_; }$/;"	f	class:GenericMemberIterator
operator ==	include/rapidjson/document.h	/^    bool operator==(const Ch* rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    bool operator==(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    bool operator==(const std::basic_string<Ch>& rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>,internal::IsGenericValue<T> >), (bool)) operator==(const T& rhs) const { return *this == GenericValue(rhs); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator==(const T& lhs, const GenericValue& rhs) { return rhs == lhs; }$/;"	f	class:GenericValue
operator ==	include/rapidjson/error/error.h	/^    bool operator==(ParseErrorCode code) const { return code_ == code; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/error/error.h	/^    bool operator==(const ParseResult& that) const { return code_ == that.code_; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/error/error.h	/^    friend bool operator==(ParseErrorCode code, const ParseResult & err) { return code == err.code_; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/internal/biginteger.h	/^    bool operator==(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
operator ==	include/rapidjson/internal/biginteger.h	/^    bool operator==(const Type rhs) const {$/;"	f	class:internal::BigInteger
operator ==	include/rapidjson/pointer.h	/^    bool operator==(const GenericPointer& rhs) const {$/;"	f	class:GenericPointer
operator >	include/rapidjson/document.h	/^    bool operator> (ConstIterator that) const { return ptr_ > that.ptr_; }$/;"	f	class:GenericMemberIterator
operator >=	include/rapidjson/document.h	/^    bool operator>=(ConstIterator that) const { return ptr_ >= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](SizeType index) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](const std::basic_string<Ch>& name) { return (*this)[GenericValue(StringRef(name))]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(GenericValue&)) operator[](T* name) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(const GenericValue&)) operator[](T* name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    Reference operator[](DifferenceType n) const { return ptr_[n]; }$/;"	f	class:GenericMemberIterator
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](SizeType index) const { return const_cast<GenericValue&>(*this)[index]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](const std::basic_string<Ch>& name) const { return (*this)[GenericValue(StringRef(name))]; }$/;"	f	class:GenericValue
operator bool	include/rapidjson/error/error.h	/^    operator bool() const { return !IsError(); }$/;"	f	struct:ParseResult
operator const Ch *	include/rapidjson/document.h	/^    operator const Ch *() const { return s; }$/;"	f	struct:GenericStringRef
original_	include/rapidjson/reader.h	/^    Stream& original_;$/;"	m	class:internal::StreamLocalCopy
os_	include/rapidjson/encodedstream.h	/^    OutputByteStream& os_;$/;"	m	class:EncodedOutputStream
os_	include/rapidjson/encodedstream.h	/^    OutputByteStream* os_;$/;"	m	class:AutoUTFOutputStream
os_	include/rapidjson/pointer.h	/^        OutputStream& os_;$/;"	m	class:GenericPointer::PercentEncodeStream
os_	include/rapidjson/writer.h	/^    OutputStream* os_;$/;"	m	class:Writer
oszfunc	include/cec14_test_func.h	/^void oszfunc (double *x, double *xosz, int nx)$/;"	f
out	include/utils.h	/^			ofstream out;$/;"	m	class:Save
output	cir.h	/^void output()$/;"	f
output1	cir.h	/^FILE *output1;                    \/* X[0] output *\/$/;"	v
output2	cir.h	/^FILE *output2;                    \/* Vout output*\/$/;"	v
ov	cir.h	/^double	overshoot,undershoot,PF1,OF4,OF2,ov,uv,time_con;$/;"	v
overshoot	cir.h	/^double	overshoot,undershoot,PF1,OF4,OF2,ov,uv,time_con;$/;"	v
ownAllocator_	include/rapidjson/document.h	/^    Allocator* ownAllocator_;$/;"	m	class:GenericDocument
ownAllocator_	include/rapidjson/internal/stack.h	/^    Allocator* ownAllocator_;$/;"	m	class:internal::Stack
ownAllocator_	include/rapidjson/pointer.h	/^    Allocator* ownAllocator_;               \/\/!< Allocator owned by this Pointer.$/;"	m	class:GenericPointer
ownBaseAllocator_	include/rapidjson/allocators.h	/^    BaseAllocator* ownBaseAllocator_;   \/\/!< base allocator created by this object.$/;"	m	class:MemoryPoolAllocator
p	include/utils.h	/^	vector<int>p;$/;"	m	class:RandomPermutation
p_function	cir.h	/^double p_function;$/;"	v
padding	include/rapidjson/document.h	/^            char padding[4];$/;"	m	struct:GenericValue::Number::I
padding2	include/rapidjson/document.h	/^            char padding2[4];$/;"	m	struct:GenericValue::Number::U
parseErrorCode_	include/rapidjson/pointer.h	/^    PointerParseErrorCode parseErrorCode_;  \/\/!< Parsing error code.$/;"	m	class:GenericPointer
parseErrorOffset_	include/rapidjson/pointer.h	/^    size_t parseErrorOffset_;               \/\/!< Offset in code unit when parsing fail.$/;"	m	class:GenericPointer
parseFile	include/settingParser.h	/^		void parseFile(const char *s){$/;"	f	class:SettingParser
parseResult_	include/rapidjson/document.h	/^          parseResult_(rhs.parseResult_)$/;"	f	class:GenericDocument
parseResult_	include/rapidjson/document.h	/^    ParseResult parseResult_;$/;"	m	class:GenericDocument
parseResult_	include/rapidjson/reader.h	/^    ParseResult parseResult_;$/;"	m	class:GenericReader
pop_value	cir.h	/^void pop_value()$/;"	f
pqa	cir.h	/^void pqa()$/;"	f
printArr	include/utils.h	/^void printArr(int *arr,int size){$/;"	f
printV	main.cpp	/^void printV(double *d,int s){$/;"	f
printVec	include/utils.h	/^void printVec(const vector<T>&arr){$/;"	f
ptr_	include/rapidjson/document.h	/^    Pointer ptr_; \/\/!< raw pointer$/;"	m	class:GenericMemberIterator
push_value	cir.h	/^void push_value()$/;"	f
putFunc_	include/rapidjson/encodedstream.h	/^    PutFunc putFunc_;$/;"	m	class:AutoUTFOutputStream
quot	include/rapidjson/msinttypes/inttypes.h	/^   intmax_t quot;$/;"	m	struct:__anon6
r_	include/rapidjson/reader.h	/^        GenericReader& r_;$/;"	m	struct:GenericReader::ClearStackOnExit
range	include/BasicDE.h	/^		vector<vector<double> >range;$/;"	m	class:BasicDE1
rastrigin_func	include/cec14_test_func.h	/^void rastrigin_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Rastrigin's  *\/$/;"	f
read	main.cpp	/^void read(const char *file,double *x,int s){$/;"	f
readCount_	include/rapidjson/filereadstream.h	/^    size_t readCount_;$/;"	m	class:FileReadStream
recv	include/MPIHelper.h	/^		void recv(double *buf,int count,int src,int tag=TAG){$/;"	f	class:MPIHelper
recv	include/MPIHelper.h	/^		void recv(int &buf,int src,int tag=TAG2){$/;"	f	class:MPIHelper
recv	include/MPIHelper.h	/^		void recv(int *buf,int count,int src,int tag=TAG1){$/;"	f	class:MPIHelper
registerSignalHandler	include/SignalHandleHelper.h	/^static void registerSignalHandler(SignalHandler h,int type=SIGINT){$/;"	f	class:SignalHandleHelper
rem	include/rapidjson/msinttypes/inttypes.h	/^   intmax_t rem;$/;"	m	struct:__anon6
request	include/MPIHelper.h	/^	MPI_Request request;$/;"	m	class:MPIHelper
res	include/functions.h	/^	double res=0.0;$/;"	v
res	include/functions.h	/^	double res=fabs(xs[0]);$/;"	v
restart_stage	cir.h	/^void restart_stage()$/;"	f
rosenbrock_func	include/cec14_test_func.h	/^void rosenbrock_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Rosenbrock's *\/$/;"	f
rotatefunc	include/cec14_test_func.h	/^void rotatefunc (double *x, double *xrot, int nx,double *Mr)$/;"	f
s	include/rapidjson/document.h	/^        String s;$/;"	m	union:GenericValue::Data
s	include/rapidjson/document.h	/^    const Ch* const s; \/\/!< plain CharType pointer$/;"	m	struct:GenericStringRef
s	include/rapidjson/reader.h	/^    Stream s;$/;"	m	class:internal::StreamLocalCopy
s	include/rapidjson/reader.h	/^    Stream& s;$/;"	m	class:internal::StreamLocalCopy
save	main.cpp	/^void save(const char *file,double *x,int s){$/;"	f
schaffer_F7_func	include/cec14_test_func.h	/^void schaffer_F7_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Schwefel's 1.2  *\/$/;"	f
schwefel_func	include/cec14_test_func.h	/^void schwefel_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Schwefel's  *\/$/;"	f
send	include/MPIHelper.h	/^		void send(double *buf,int count,int dest,int tag=TAG){$/;"	f	class:MPIHelper
send	include/MPIHelper.h	/^		void send(int *buf,int count,int dest,int tag=TAG1){$/;"	f	class:MPIHelper
send	include/MPIHelper.h	/^		void send(int buf,int dest,int tag=TAG2){$/;"	f	class:MPIHelper
setName	include/functions.h	/^		void setName(const char *s){$/;"	f	class:Function
setName	include/functions.h	/^	void setName(const char *n){$/;"	f	class:EA
setNumDim	include/functions.h	/^		void setNumDim(int n){numDim=n;}$/;"	f	class:Function
setXY	include/utils.h	/^		void setXY(const char *x,const char *y){$/;"	f	class:Save
setinit	cir.h	/^void setinit()$/;"	f
settling_time	cir.h	/^double settling_time=h2;$/;"	v
settlingtime	cir.h	/^int settlingtime=31252;$/;"	v
shiftfunc	include/cec14_test_func.h	/^void shiftfunc (double *x, double *xshift, int nx,double *Os)$/;"	f
simulateTo	cir.h	/^void simulateTo(double endtime)$/;"	f
size	include/rapidjson/allocators.h	/^        size_t size;        \/\/!< Current size of allocated memory in bytes.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
size	include/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::Array
size	include/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::Object
size_	include/rapidjson/memorystream.h	/^    size_t size_;       \/\/!< Size of the stream.$/;"	m	struct:MemoryStream
snapOneSWcycle	cir.h	/^void snapOneSWcycle()$/;"	f
snapThrough	cir.h	/^void snapThrough(double STEP)$/;"	f
sphere_func	include/cec14_test_func.h	/^void sphere_func (double *x, double *f, int nx, double *Os, double *Mr, int s_flag, int r_flag) \/* Sphere *\/$/;"	f
sr_func	include/cec14_test_func.h	/^void sr_func (double *x, double *sr_x, int nx, double *Os,double *Mr, double sh_rate, int s_flag,int r_flag) \/* shift and rotate *\/$/;"	f
src_	include/rapidjson/memorystream.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:MemoryStream
src_	include/rapidjson/pointer.h	/^        const Ch* src_;     \/\/!< Current read position.$/;"	m	class:GenericPointer::PercentDecodeStream
src_	include/rapidjson/rapidjson.h	/^    Ch* src_;$/;"	m	struct:GenericInsituStringStream
src_	include/rapidjson/rapidjson.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:GenericStringStream
ss	include/rapidjson/document.h	/^        ShortString ss;$/;"	m	union:GenericValue::Data
stackEnd_	include/rapidjson/internal/stack.h	/^    char *stackEnd_;$/;"	m	class:internal::Stack
stackStream	include/rapidjson/reader.h	/^        StackStream<char> stackStream;$/;"	m	class:GenericReader::NumberStream
stackTop_	include/rapidjson/internal/stack.h	/^    char *stackTop_;$/;"	m	class:internal::Stack
stack_	include/rapidjson/document.h	/^    internal::Stack<StackAllocator> stack_;$/;"	m	class:GenericDocument
stack_	include/rapidjson/internal/stack.h	/^    char *stack_;$/;"	m	class:internal::Stack
stack_	include/rapidjson/memorybuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	struct:GenericMemoryBuffer
stack_	include/rapidjson/reader.h	/^        internal::Stack<StackAllocator>& stack_;$/;"	m	class:GenericReader::StackStream
stack_	include/rapidjson/reader.h	/^    internal::Stack<StackAllocator> stack_;  \/\/!< A stack for storing decoded string temporarily during non-destructive parsing.$/;"	m	class:GenericReader
stack_	include/rapidjson/stringbuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	class:GenericStringBuffer
stage	cir.h	/^int stage, Vcon, Denforce, condition,\/*=9,*\/ k;$/;"	v
stage1	cir.h	/^void stage1()$/;"	f
stage2	cir.h	/^void stage2()$/;"	f
stage3	cir.h	/^void stage3()$/;"	f
stage4	cir.h	/^void stage4()$/;"	f
status	include/MPIHelper.h	/^	MPI_Status status;$/;"	m	class:MPIHelper
step_rastrigin_func	include/cec14_test_func.h	/^void step_rastrigin_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Noncontinuous Rastrigin's  *\/$/;"	f
str	include/rapidjson/document.h	/^        Ch str[MaxChars];$/;"	m	struct:GenericValue::ShortString
str	include/rapidjson/document.h	/^        const Ch* str;$/;"	m	struct:GenericValue::String
strtoimax	include/rapidjson/msinttypes/inttypes.h	307;"	d
strtoumax	include/rapidjson/msinttypes/inttypes.h	308;"	d
sum	include/functions.h	/^	double sum=0.0;$/;"	v
sumcosx	include/functions.h	/^	double sumcosx=0.0;$/;"	v
sumu	include/functions.h	/^	double sumu=0.0;$/;"	v
sumx	include/functions.h	/^	double sumx=0.0;$/;"	v
sumx2	include/functions.h	/^	double sumx2=0.0;$/;"	v
sumy	include/functions.h	/^	double sumy=0.0;$/;"	v
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 0 };$/;"	e	enum:ASCII::__anon4
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:AutoUTF::__anon5
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF16::__anon2
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF32::__anon3
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF8::__anon1
t	cir.h	/^double times, t;$/;"	v
takeFunc_	include/rapidjson/encodedstream.h	/^    TakeFunc takeFunc_;$/;"	m	class:AutoUTFInputStream
test	cir.h	/^inline void test()$/;"	f
test	include/utils.h	/^		static void test(){$/;"	f	class:Tic
tic	include/utils.h	/^		static double tic(const char *tag="begin"){$/;"	f	class:Tic
time_con	cir.h	/^double	overshoot,undershoot,PF1,OF4,OF2,ov,uv,time_con;$/;"	v
time_sim	cir.h	/^double time_sim[32000];$/;"	v
times	cir.h	/^double times, t;$/;"	v
tmpFx	include/BasicDE.h	/^		vector<double>tmpFx;$/;"	m	class:BasicDE
tmpFx	include/BasicDE.h	/^		vector<double>tmpFx;$/;"	m	class:BasicDE1
tmpX	include/BasicDE.h	/^		vector<vector<double> >tmpX;$/;"	m	class:BasicDE
tmpX	include/BasicDE.h	/^		vector<vector<double> >tmpX;$/;"	m	class:BasicDE1
tokenCount_	include/rapidjson/pointer.h	/^    size_t tokenCount_;                     \/\/!< Number of tokens in tokens_.$/;"	m	class:GenericPointer
tokens_	include/rapidjson/pointer.h	/^    Token* tokens_;                         \/\/!< A list of tokens.$/;"	m	class:GenericPointer
tx	include/BasicDE.h	/^		vector<double>tx;$/;"	m	class:BasicDE
tx	include/BasicDE.h	/^		vector<double>tx;$/;"	m	class:BasicDE1
type_	include/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFInputStream
type_	include/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFOutputStream
u	include/functions.h	/^static double u(double x,double a,double k,double m){$/;"	f
u	include/rapidjson/document.h	/^            unsigned u;$/;"	m	struct:GenericValue::Number::U
u	include/rapidjson/document.h	/^        }u;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::U
u32toa	include/rapidjson/internal/itoa.h	/^inline char* u32toa(uint32_t value, char* buffer) {$/;"	f	namespace:internal
u64	include/rapidjson/document.h	/^        uint64_t u64;$/;"	m	union:GenericValue::Number
u64toa	include/rapidjson/internal/itoa.h	/^inline char* u64toa(uint64_t value, char* buffer) {$/;"	f	namespace:internal
u_	include/rapidjson/internal/ieee754.h	/^        uint64_t u_;$/;"	m	union:internal::Double::__anon12
uint16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint64_t	include/rapidjson/msinttypes/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_fast16_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
undershoot	cir.h	/^double	overshoot,undershoot,PF1,OF4,OF2,ov,uv,time_con;$/;"	v
update	include/BasicDE.h	/^		void update(int maxGeneration){$/;"	f	class:BasicDE
update	include/BasicDE.h	/^		void update(int maxGeneration){$/;"	f	class:BasicDE1
updateX	include/BasicDE.h	/^		void updateX(){$/;"	f	class:BasicDE
updateX	include/BasicDE.h	/^		void updateX(){$/;"	f	class:BasicDE1
userBuffer_	include/rapidjson/allocators.h	/^    void *userBuffer_;          \/\/!< User supplied buffer.$/;"	m	class:MemoryPoolAllocator
uv	cir.h	/^double	overshoot,undershoot,PF1,OF4,OF2,ov,uv,time_con;$/;"	v
valid_	include/rapidjson/pointer.h	/^        bool valid_;        \/\/!< Whether the parsing is valid.$/;"	m	class:GenericPointer::PercentDecodeStream
value	include/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> value;    \/\/!< value of member.$/;"	m	struct:GenericMember
value	include/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	e	enum:STATIC_ASSERTION_FAILURE::__anon7
valueCount	include/rapidjson/writer.h	/^        size_t valueCount;  \/\/!< number of values in this level$/;"	m	struct:Writer::Level
wcstoimax	include/rapidjson/msinttypes/inttypes.h	311;"	d
wcstoumax	include/rapidjson/msinttypes/inttypes.h	312;"	d
weierstrass_func	include/cec14_test_func.h	/^void weierstrass_func (double *x, double *f, int nx, double *Os,double *Mr,int s_flag, int r_flag) \/* Weierstrass's  *\/$/;"	f
x	include/BasicDE.h	/^		vector<vector<double> >x;\/\/x,trail x.$/;"	m	class:BasicDE
x	include/BasicDE.h	/^		vector<vector<double> >x;\/\/x,trail x.$/;"	m	class:BasicDE1
x_bound	include/cec14_test_func.h	/^double *OShift,*M,*y,*z,*x_bound;$/;"	v
xd	include/functions.h	/^double xd=xs[size-1];$/;"	v
xlow	include/functions.h	/^		double xlow,xup;$/;"	m	class:Function
xmax	include/BasicDE.h	/^		double xmax;$/;"	m	class:BasicDE
xmin	include/BasicDE.h	/^		double xmin;$/;"	m	class:BasicDE
xup	include/functions.h	/^		double xlow,xup;$/;"	m	class:Function
y	include/cec14_test_func.h	/^double *OShift,*M,*y,*z,*x_bound;$/;"	v
y1	include/functions.h	/^	double y1=1.0+(xs[0]+1.0)\/4.0;$/;"	v
yd	include/functions.h	/^	double yd=1.0+(xs[size-1]+1.0)\/4.0;$/;"	v
yi	include/functions.h	/^	double yi,yi1;$/;"	v
yi1	include/functions.h	/^	double yi,yi1;$/;"	v
z	include/cec14_test_func.h	/^double *OShift,*M,*y,*z,*x_bound;$/;"	v
zero	cir.h	60;"	d
~ClearStackOnExit	include/rapidjson/document.h	/^        ~ClearStackOnExit() { d_.ClearStack(); }$/;"	f	struct:GenericDocument::ClearStackOnExit
~ClearStackOnExit	include/rapidjson/reader.h	/^        ~ClearStackOnExit() { r_.ClearStack(); }$/;"	f	struct:GenericReader::ClearStackOnExit
~FunctionFactory	include/functions.h	/^		~FunctionFactory(){$/;"	f	class:FunctionFactory
~GenericDocument	include/rapidjson/document.h	/^    ~GenericDocument() {$/;"	f	class:GenericDocument
~GenericPointer	include/rapidjson/pointer.h	/^    ~GenericPointer() {$/;"	f	class:GenericPointer
~GenericValue	include/rapidjson/document.h	/^    ~GenericValue() {$/;"	f	class:GenericValue
~MPIHelper	include/MPIHelper.h	/^		~MPIHelper(){$/;"	f	class:MPIHelper
~MemoryPoolAllocator	include/rapidjson/allocators.h	/^    ~MemoryPoolAllocator() {$/;"	f	class:MemoryPoolAllocator
~NumberStream	include/rapidjson/reader.h	/^        ~NumberStream() {}$/;"	f	class:GenericReader::NumberStream
~Save	include/utils.h	/^		~Save(){$/;"	f	class:Save
~SettingParser	include/settingParser.h	/^		~SettingParser(){$/;"	f	class:SettingParser
~Stack	include/rapidjson/internal/stack.h	/^    ~Stack() {$/;"	f	class:internal::Stack
~StreamLocalCopy	include/rapidjson/reader.h	/^    ~StreamLocalCopy() { original_ = s; }$/;"	f	class:internal::StreamLocalCopy
